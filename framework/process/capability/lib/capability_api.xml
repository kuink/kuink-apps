<?xml version="1.0" encoding="UTF-8"?>
<Node>
  <Doc>
    <![CDATA[ Capability API  ::  Allows the communication with 'fw_capability' table. ]]>
  </Doc>
  <Permissions/>
  <Configuration/>
  <Libraries>
    <Use name="UtilsLib" type="lib"/>
  </Libraries>
  <Params/>
  <Screens/>
  <Actions/>
  <Library forceinterface="true">
    <!--
			*		add  |  Adds a new capability to the system.
			*
			*		PARAMS
			*		 - (text) name			::  Capability's name;
			*		 - (text) code			::  Capability's code;
			*		 - (int) is_global  ::  1 if this capability exists for all companies; 0, otherwise.
			*
			*		RETURN
			*    - (int) id_capability  ::  Returns the created 'fw_capability' record's id.
      *
			*		ERRORS
			*	   - (code) -1  ::  Returns -1 if the capability already exists.
		-->
    <Function name="add" doc="Adds a new capability to the system.">
      <Params>
        <Param name="name" type="text" required="true" doc="Capability's name"/>
        <Param name="code" type="text" required="true" doc="Capability's code"/>
        <Param name="is_global" type="int" required="true" doc="1 if this capability exists for all companies; 0, otherwise"/>
      </Params>
      <Return type="int" doc="The created 'fw_capability' record's id."/>
      <Errors>
        <Error code="-1" doc="The capability already exists."/>
      </Errors>

      <Begin>
        <!-- Validates the received parameters -->
        <Var name="result">
          <Call function="validateCapability">
            <Param name="code"><Var name="PARAMS" key="code"/></Param>
            <Param name="is_insert">1</Param>
          </Call>
        </Var>

        <!-- If everything is in order, proceeds to insert -->
        <If condition="$result == 0">
          <Then>
            <!-- Creates the record -->
            <Var name="capability" key="id">
              <DataAccess method="insert" params="PARAMS">
                <Param name="_entity">fw_capability</Param>
                <Param name="_id_updater"><Var name="USER" key="id"/></Param>
                <Param name="_modification"><Now/></Param>
                <Param name="_modification_ip"><Var name="USER" key="ip"/></Param>
                <Param name="_id_creator"><Var name="USER" key="id"/></Param>
                <Param name="_creation"><Now/></Param>
                <Param name="_creation_ip"><Var name="USER" key="ip"/></Param>
              </DataAccess>
            </Var>
            <!-- Gets the record just created -->
            <Var name="capability">
              <Call function="getById">
                <Param name="id"><Var name="capability" key="id"/></Param>
              </Call>
            </Var>
            <!-- Logs this action -->
            <Call library="framework,log,api" function="add">
              <Param name="type">framework,capability,api</Param>
              <Param name="action">insert</Param>
              <Param name="log_key"><Var name="capability" key="id"/></Param>
              <Param name="context_data">
                <UtilsLib method="jsonEncode">
                  <Param><Var name="capability"/></Param>
                </UtilsLib>
              </Param>
              <Param name="message">
                <Lang key="logCapabilityInsert">
                  <Param><Var name="capability" key="id"/></Param>
                </Lang>
              </Param>
            </Call>

            <!-- Returns capability's id -->
            <Var name="result"><Var name="capability" key="id"/></Var>
          </Then>
        </If>

        <Return>
          <Var name="result"/>
        </Return>
      </Begin>
    </Function>


    <!--
			*		delete  |  Deletes a capability from the system.
			*  
			*		PARAMS
			*		 - (int) id  ::  Capability's id.
      *
			*		RETURN
			*    - (int) 0  ::  Returns 0 if the capability was removed.
      *
			*		ERRORS
			*	   - (code) -1  ::  Returns -1 if the capability doesn't exist.
		-->
    <Function name="delete" doc="Deletes a capability from the system.">
      <Params>
        <Param name="id" type="int" required="true" doc="Capability's id"/>
      </Params>
      <Return type="int" doc="0 if the capability was removed."/>
      <Errors>
        <Error code="-1" doc="The capability doesn't exist."/>
      </Errors>

      <Begin>
        <!-- Sets default error value -->
        <Var name="error">0</Var>        

        <!-- Gets the record -->
        <Var name="capability">
          <Call function="getById">
            <Param name="id"><Var name="PARAMS" key="id"/></Param>
          </Call>
        </Var>

        <!-- Checks if the capability exists: if it doesn't, returns -1 -->
        <If condition="$capability->__length == 0">
          <Then>
            <Var name="error">-1</Var>
          </Then>
          <Else>
            <!-- Everything is in order, proceeds to delete -->
            <!-- Deletes the record -->
            <DataAccess method="delete">
              <Param name="_entity">fw_capability</Param>
              <Param name="id"><Var name="PARAMS" key="id"/></Param>
            </DataAccess>
            <!-- Logs this action -->
            <Call library="framework,log,api" function="add">
              <Param name="type">framework,capability,api</Param>
              <Param name="action">delete</Param>
              <Param name="log_key"><Var name="PARAMS" key="id"/></Param>
              <Param name="context_data">
                <UtilsLib method="jsonEncode">
                  <Param><Var name="capability"/></Param>
                </UtilsLib>
              </Param>
              <Param name="message">
                <Lang key="logCapabilityDelete">
                  <Param><Var name="PARAMS" key="id"/></Param>
                </Lang>
              </Param>
            </Call>
          </Else>
        </If>

        <Return>
          <Var name="error"/>
        </Return>
      </Begin>
    </Function>


    <!--
			*		existsByCode  |  Checks if a capability exists, given its code.
			*
			*		PARAMS
			*    - (text) code  ::  Capability's code.
      *  
			*		RETURN
			*	   - (int) 1 | 0  ::  Returns 1 if the capability exists; 0, if it doesn't.
		-->
    <Function name="existsByCode" doc="Checks if a capability exists, given its code.">
      <Params>
        <Param name="code" type="text" required="true" doc="Capability's code"/>
      </Params>
      <Return type="int" doc="1 if the capability exists; 0, if it doesn't."/>
      
      <Begin>
        <!-- Checks if the capability exists -->
        <Var name="capability">
          <DataAccess method="load">
            <Param name="_entity">fw_capability</Param>
            <Param name="code"><Var name="PARAMS" key="code"/></Param>
          </DataAccess>
        </Var>

        <!-- If it does, returns. If it doesn't, returns 0 -->
        <If condition="$capability->__length != 0">
          <Then>
            <Var name="exists">1</Var>
          </Then>
          <Else>
            <Var name="exists">0</Var>
          </Else>
        </If>
        
        <Return>
          <Var name="exists"/>
        </Return>
      </Begin>
    </Function>


    <!--
			*		existsById  |  Checks if a capability exists, given its id.
			*
			*		PARAMS
			*    - (int) id  ::  Capability's id.
      *  
			*		RETURN
			*	   - (int) 0 | 1  ::  Returns 1 if the capability exists; 0, if it doesn't.
		-->
    <Function name="existsById" doc="Checks if a capability exists, given its id.">
      <Params>
        <Param name="id" type="int" required="true" doc="Capability's id"/>
      </Params>
      <Return type="int" doc="1 if the capability exists; 0, if it doesn't."/>

      <Begin>
        <!-- Checks if the capability exists -->
        <Var name="capability">
          <DataAccess method="load">
            <Param name="_entity">fw_capability</Param>
            <Param name="id"><Var name="PARAMS" key="id"/></Param>
          </DataAccess>
        </Var>

        <!-- If it does, returns 1. If it doesn't, returns 0 -->
        <If condition="$capability->__length != 0">
          <Then>
            <Var name="exists">1</Var>
          </Then>
          <Else>
            <Var name="exists">0</Var>
          </Else>
        </If>

        <Return>
          <Var name="exists"/>
        </Return>
      </Begin>
    </Function>


    <!--
			*		getAll  |  Gets a list of all existing capabilities (whether they are global or not).
			*  
			*		RETURN
			*	   - (multiple) fw_capability  ::  Returns all 'fw_capability' records.
		-->
    <Function name="getAll" scope="public" doc="Gets a list of all existing capabilities (whether they are global or not).">
      <Params/>
			<Return type="multiple" doc="All 'fw_capability' records."/>

      <Begin>
        <Var name="capabilities">
					<DataAccess method="getAll">
						<Param name="_entity">fw_capability</Param>
            <Param name="_sort">code ASC, name ASC</Param>
					</DataAccess>
				</Var>

				<Return>
					<Var name="capabilities"/>
				</Return>
      </Begin>
    </Function>


    <!--
			*		getGlobal  |  Gets a list of the capabilities that exists in all companies.
			*  
			*		RETURN
			*	   - (multiple) fw_capability  ::  Returns a set of 'fw_capability' records.
		-->
    <Function name="getGlobal" scope="public" doc="Gets a list of the capabilities that exists in all companies.">
      <Params/>
			<Return type="multiple" doc="Set of 'fw_capability' records."/>

      <Begin>
        <Var name="capabilities">
					<DataAccess method="getAll">
						<Param name="_entity">fw_capability</Param>
            <Param name="is_global"><Int>1</Int></Param>
            <Param name="_sort">code ASC, name ASC</Param>
					</DataAccess>
				</Var>

				<Return>
					<Var name="capabilities"/>
				</Return>
      </Begin>
    </Function>


		<!--
			*		getByCode  |  Gets a capability given the code.
			*
			*		PARAMS
			*    - (text) code  ::  Capability's code.
			*
			*		RETURN
			*	   - (single) fw_capability  ::  Returns the corresponding 'fw_capability' record. 
		-->
    <Function name="getByCode" doc="Gets a capability given the code.">
      <Params>
        <Param name="code" type="text" required="true" doc="Capability's code"/>
      </Params>
      <Return type="single" doc="The corresponding 'fw_capability' record."/>

      <Begin>
        <Var name="capability">
          <DataAccess method="load">
            <Param name="_entity">fw_capability</Param>
            <Param name="code"><Var name="PARAMS" key="code"/></Param>
          </DataAccess>
        </Var>

        <Return>
          <Var name="capability"/>
        </Return>
      </Begin>
    </Function>


		<!--
			*		getById  |  Gets a capability given the id.
			*
			*		PARAMS
			*    - (int) id  ::  Capability's id.
			*
			*		RETURN
			*	   - (single) fw_capability  ::  Returns the corresponding 'fw_capability' record. 
		-->
    <Function name="getById" doc="Gets a capability given the id.">
      <Params>
        <Param name="id" type="int" required="true" doc="Capability's id"/>
      </Params>
      <Return type="single" doc="The corresponding 'fw_capability' record."/>

      <Begin>
        <Var name="capability">
          <DataAccess method="load">
            <Param name="_entity">fw_capability</Param>
            <Param name="id"><Var name="PARAMS" key="id"/></Param>
          </DataAccess>
        </Var>

        <Return>
          <Var name="capability"/>
        </Return>
      </Begin>
    </Function>


    <!--
			*		search  |  Gets a list of capabilities that meet the given search criteria.
			*  
			*		PARAMS
      *    - (int) id         ::  Capability's id;
			*    - (text) name      ::  Capability's name;
			*		 - (text) code      ::  Capability's code;
			*		 - (int) is_global  ::  1 to filter by just the global capabilities (exists in all companies);
      *		 - (int) pageNum    ::  Current page's number;
      *		 - (int) pageSize   ::  Current page's size.
			*
			*		RETURN
			*	   - (multiple) fw_capability  ::  Returns a set of 'fw_capability' records.
		-->
    <Function name="search" doc="Gets a list of capabilities that meet the given search criteria.">
      <Params>
        <Param name="id" type="int" required="false" doc="Capability's id"/>
        <Param name="name" type="text" required="false" doc="Capability's name"/>
        <Param name="code" type="text" required="false" doc="Capability's code"/>
        <Param name="is_global" type="int" required="false" doc="1 to filter by just the global capabilities (exists in all companies)"/>
        <Param name="pageNum" type="int" required="false" doc="Current page's number"/>
        <Param name="pageSize" type="int" required="false" doc="Current page's size"/>
      </Params>
      <Return type="multiple" doc="Set of 'fw_capability' records"/>

      <Begin>
        <Var name="capabilities">
          <DataAccess method="this,this,search">
            <Param name="id"><Var name="PARAMS" key="id"/></Param>
            <Param name="name" wildcard="full"><Var name="PARAMS" key="name"/></Param>
            <Param name="code" wildcard="full"><Var name="PARAMS" key="code"/></Param>
            <Param name="is_global"><Var name="PARAMS" key="is_global"/></Param>
            <Param name="_pageNum"><Var name="PARAMS" key="pageNum"/></Param>
            <Param name="_pageSize"><Var name="PARAMS" key="pageSize"/></Param>
          </DataAccess>
        </Var>
      
        <Return>
          <Var name="capabilities"/>
        </Return>
      </Begin>
    </Function>
   

    <!--
			*		update  |  Updates a capability.
			*
			*		PARAMS
			*		 - (int) id    			::  Capability's id;
			*		 - (text) name			::  Capability's name;
			*		 - (text) code			::  Capability's code;
			*		 - (int) is_global  ::  1 if this capability exists for all companies; 0, otherwise.
			*
			*		RETURN
			*    - (int) 0  ::  Returns 0 if the capability was correctly updated.
      *
			*		ERRORS
			*	   - (code) -1  ::  Returns -1 if there's already a capability with the given code.
		-->
    <Function name="update" doc="Updates a capability.">
      <Params>
        <Param name="id" type="int" required="true" doc="Capability's id"/>
        <Param name="name" type="text" required="true" doc="Capability's name"/>
        <Param name="code" type="text" required="true" doc="Capability's code"/>
        <Param name="is_global" type="int" required="true" doc="1 if this capability exists for all companies; 0, otherwise"/>
      </Params>
      <Return type="int" doc="0 if the capability was correctly updated."/>
      <Errors>
        <Error code="-1" doc="There's already a capability with the given code."/>
      </Errors>

      <Begin>
        <!-- Validates the received parameters -->
        <Var name="validation">
          <Call library="framework,capability,api" function="validateCapability">
            <Param name="id"><Var name="PARAMS" key="id"/></Param>
            <Param name="code"><Var name="PARAMS" key="code"/></Param>
            <Param name="is_insert">0</Param>
          </Call>
        </Var>

        <!-- If everything is in order, proceeds to update -->
        <If condition="$validation == 0">
          <Then>
            <!-- Gets the current record -->
            <Var name="capability">
              <Call function="getById">
                <Param name="id"><Var name="PARAMS" key="id"/></Param>
              </Call>
            </Var>
            <!-- Updates the record -->
            <DataAccess method="update" params="PARAMS">
              <Param name="_entity">fw_capability</Param>
              <Param name="id"><Var name="PARAMS" key="id"/></Param>
              <Param name="_id_updater"><Var name="USER" key="id"/></Param>
              <Param name="_modification"><Now/></Param>
              <Param name="_modification_ip"><Var name="USER" key="ip"/></Param>
            </DataAccess>
            <!-- Gets the record just updated -->
            <Var name="updatedCapability">
              <Call function="getById">
                <Param name="id"><Var name="PARAMS" key="id"/></Param>
              </Call>
            </Var>
            <!-- Logs this action -->
            <Var name="records"><Set/></Var>
            <Var name="records" key=""><Var name="capability"/></Var>
            <Var name="records" key=""><Var name="updatedCapability"/></Var>
            <Call library="framework,log,api" function="add">
              <Param name="type">framework,capability,api</Param>
              <Param name="action">update</Param>
              <Param name="log_key"><Var name="PARAMS" key="id"/></Param>
              <Param name="context_data">
                <UtilsLib method="jsonEncode">
                  <Param><Var name="records"/></Param>
                </UtilsLib>
              </Param>
              <Param name="message">
                <Lang key="logCapabilityUpdate">
                  <Param><Var name="PARAMS" key="id"/></Param>
                </Lang>
              </Param>
            </Call>
          </Then>
        </If>

        <Return>
          <Var name="validation"/>
        </Return>
      </Begin>
    </Function>


    <!--
			*		validateCapability  |  Validates the parameters of a capability.
			*
			*		PARAMS
			*		 - (int) id			    ::  Capability's id;
      *		 - (text) code			::  Capability's code;
      *    - (int) is_insert  ::  1 if it's a new capability; 0 if it's an update.
			*
			*		RETURN
			*    - (int) 0  ::  Returns 0 if all params are valid.
      *
			*		ERRORS
			*	   - (code) -1  ::  Returns -1 if there's already a capability with the given code.
      *    - (code) -2  ::  Returns -2 if the capability doesn't exist.
    -->
    <Function name="validateCapability" scope="private" doc="Validates the parameters of a capability.">
      <Params>
        <Param name="id" type="int" required="false" doc="Capability's id"/>
        <Param name="code" type="text" required="false" doc="Capability's code"/>
        <Param name="is_insert" type="int" required="true" doc="1 if it's a new capability; 0 if it's an update"/>
      </Params>
			<Return type="int" doc="0 if all params are valid."/>
      <Errors>
        <Error code="-1" doc="There's already a capability with the given code."/>
        <Error code="-2" doc="The capability doesn't exist."/>
      </Errors>
      
      <Begin>
        <!-- Sets default value -->
        <Var name="error">0</Var>

        <!-- Checks if the capability exists -->
        <Var name="capability"><!-- For an insert and an update -->
          <Call function="getByCode">
            <Param name="code"><Var name="PARAMS" key="code"/></Param>
          </Call>
        </Var>
        <Var name="exists"><!-- For an update, only -->
          <Call function="existsById">
            <Param name="id"><Var name="PARAMS" key="id"/></Param>
          </Call>
        </Var>

        <!-- 
          If it's a new capability and it already exists 
          OR
          If it's a capability update and it exists another one with given code,
          returns -1
        -->
        <If condition="($PARAMS->is_insert == 1 &amp;&amp; $capability->__length != 0) || ($PARAMS->is_insert == 0 &amp;&amp; $capability->__length != 0  &amp;&amp; $capability->id != $PARAMS->id)">
          <Then>
            <Var name="error">-1</Var>
          </Then>
        </If>

        <!-- If it's a capability update and it doesn't exist, returns -2 -->
        <If condition="$PARAMS->is_insert == 0 &amp;&amp; $exists == 0">
          <Then>
            <Var name="error">-2</Var>
          </Then>
        </If>
        
        <Return>
          <Var name="error"/>
        </Return>
      </Begin>
    </Function>
  </Library>
</Node>
