<?xml version="1.0" encoding="UTF-8"?>
<Node>
	<Doc>
		<![CDATA[ Entity Management API  ::  Allows the communication with 'fw_system_entity', 'fw_system_entity_status' and 'fw_system_entity_status_cache' tables. ]]>
	</Doc>
	<Permissions/>
	<Configuration/>
	<Libraries>
		<Use name="FormatterLib" type="lib"/>
		<Use name="UtilsLib" type="lib"/>
		<Use name="SetLib" type="lib"/>
	</Libraries>
	<Screens/>
	<Actions/>
	<Library>
		<!--
			*		addSystem  |  Adds a new system to entity management.
			*  
			*		PARAMS
			*		 - (text) datasource	 ::  System's datasource;
			*		 - (text) code				 ::  System's code;
			*		 - (text) name				 ::  System's name;
			*		 - (text) description  ::  System's description;
			*		 - (text) uuid 				 ::  System's uuid;
			*		 - (int) is_active		 ::  1 if this system is active; 0, otherwise;
			*		 - (int) id_company    ::  Company's id where this system applies.
			*
			*		RETURN
			*		 - (int) id_system_entity  ::  Returns the created 'fw_system_entity' record id.
			*
			*		ERRORS
			*	   - (code) -1  ::  Returns -1 if the system already exists.
		-->
		<Function name="addSystem" scope="private" doc="Adds a new system to entity management.">
			<Params>
				<Param name="datasource" type="text" required="true" doc="System's datasource"/>
				<Param name="code" type="text" required="true" doc="System's code"/>
				<Param name="name" type="text" required="false" doc="System's name"/>
				<Param name="description" type="text" required="false" doc="System's description"/>
				<Param name="uuid" type="text" required="false" doc="System's uuid"/>
				<Param name="is_active" type="int" required="false" doc="1 if this system is active; 0, otherwise"/>
				<Param name="id_company" type="int" required="false" doc="Company's id where this system applies"/>
			</Params>
			<Return type="int" doc="The created 'fw_system_entity' record id."/>
			<Errors>
				<Error code="-1" doc="System already exists."/>
			</Errors>

			<Begin>
				<Var name="result">0</Var>

				<!-- Checks if the system already exists -->
				<Var name="system">
					<Call function="getSystemByCode">
						<Param name="code"><Var name="PARAMS" key="code"/></Param>
					</Call>
				</Var>
				<!-- If it does, sets return value to -1. Otherwise, proceeds to insert -->
				<If condition="$system != ''">
					<Then>
						<Var name="result">-1</Var>
					</Then>
					<Else>
						<!-- Creates the record -->
						<Var name="system" key="id">
							<DataAccess method="insert">
								<Param name="_entity">fw_system_entity</Param>
								<Param name="_id_updater"><Var name="USER" key="id"/></Param>
								<Param name="_modification"><Now/></Param>
								<Param name="_modification_ip"><Var name="USER" key="ip"/></Param>
								<Param name="_id_creator"><Var name="USER" key="id"/></Param>
								<Param name="_creation"><Now/></Param>
								<Param name="_creation_ip"><Var name="USER" key="ip"/></Param>
							</DataAccess>
						</Var>
						<!-- Gets the record just created -->
						<Var name="system">
							<Call function="getSystemById">
								<Param name="id"><Var name="system" key="id"/></Param>
							</Call>
						</Var>
						<!-- Logs this action -->
						<Call library="framework,log,api" function="add">
							<Param name="type">framework,em.execution,api</Param>
							<Param name="action">insert</Param>
							<Param name="log_key"><Var name="system" key="id"/></Param>
							<Param name="context_data">
								<UtilsLib method="jsonEncode">
									<Param><Var name="system"/></Param>
								</UtilsLib>
							</Param>
							<Param name="message">
								<Lang key="logExternalSystemInsert">
									<Param><Var name="system" key="id"/></Param>
								</Lang>
							</Param>
						</Call>

						<!-- Sets return value to system's id -->
						<Var name="result"><Var name="system" key="id"/></Var>
					</Else>
				</If>

				<Return>
					<Var name="result"/>
				</Return>
			</Begin>
		</Function>


		<!--
			*		deleteSystem  |  Deletes a system from entity management.
			*  
			*		PARAMS
			*		 - (int) id  ::  System's id.
		-->
		<Function name="deleteSystem" scope="private" doc="Deletes a system from entity management.">
			<Params>
				<Param name="id" type="int" required="true" doc="System's id"/>
			</Params>
			<Return/>

			<Begin>
				<!-- Gets the record -->
				<Var name="system">
					<Call function="getSystemById">
						<Param name="id"><Var name="PARAMS" key="id"/></Param>
					</Call>
				</Var>
				<!-- Deletes the record -->
				<DataAccess method="delete">
					<Param name="_entity">fw_system_entity</Param>
					<Param name="id"><Var name="PARAMS" key="id"/></Param>
				</DataAccess>
				<!-- Logs this action -->
				<Call library="framework,log,api" function="add">
					<Param name="type">framework,em.execution,api</Param>
					<Param name="action">delete</Param>
					<Param name="log_key"><Var name="PARAMS" key="id"/></Param>
					<Param name="context_data">
						<UtilsLib method="jsonEncode">
							<Param><Var name="system"/></Param>
						</UtilsLib>
					</Param>
					<Param name="message">
						<Lang key="logExternalSystemDelete">
							<Param><Var name="PARAMS" key="id"/></Param>
						</Lang>
					</Param>
				</Call>

				<Return/>
			</Begin>
		</Function>


		<!--
			*		execute  |  Executes an entity management's action.
			*  
			*		PARAMS
			*    - (string) objectCode  ::  Object's code to execute;
			*    - (string) actionCode  ::  Action's code to execute;
			*    - (array) object  			::  Object's data;
			*    - (string) task    		::  Config key to get the systems' list from (if not supplied);
			*    - (string) taskList  	::  Systems' list (separated by comma) to execute the action.
			*
			*		RETURN
			*		 - (multiple) log  ::  Returns action's propagation log.
		-->
		<Function name="execute" scope="public" doc="Executes an entity management's action.">
			<Params>
			 <Param name="objectCode" type="string" required="true" doc="Object's code to execute"/>
			 <Param name="actionCode" type="string" required="true" doc="Action's code to execute"/>
			 <Param name="object" type="array" required="false" doc="Object's data"/>
			 <Param name="task" type="string" required="false" doc="Config key to get the systems' list from (if not supplied)"/>
			 <Param name="taskList" type="string" required="false" doc="Systems' list (separated by comma) to execute the action"/>
			</Params>
			<Return type="multiple" doc="Action's propagation log"/>

			<Begin>
				<!-- Sets function's name according to the provided object's and action's code -->
				<Var name="functionName">
					<String.parse>$PARAMS->objectCode.$PARAMS->actionCode.execute</String.parse>
				</Var>
				<!-- Executes the action -->
				<Var name="log">
					<Call function="$functionName">
						<Param name="object"><Var name="PARAMS" key="object"/></Param>
						<Param name="task"><Var name="PARAMS" key="task"/></Param>
						<Param name="taskList"><Var name="PARAMS" key="taskList"/></Param>
					</Call>
				</Var>

				<Return>
					<Var name="log"/>
				</Return>
			</Begin>
		</Function>


		<!--
			*		getActiveExternalSystems  |  Gets a list of all active systems in entity management.
			*  
			*		RETURN
			*	   - (multiple) fw_system_entity  ::  Returns a set of 'fw_system_entity' records.
		-->
		<Function name="getActiveExternalSystems" scope="public" doc="Gets a list of all active systems in entity management.">
			<Params/>
			<Return type="multiple" doc="Set of 'fw_system_entity' records."/>

			<Begin>
				<Var name="systems">
					<DataAccess method="getAll">
						<Param name="_entity">fw_system_entity</Param>
						<Param name="is_active">1</Param>
					</DataAccess>
				</Var>

				<Return>
					<Var name="systems"/>
				</Return>
			</Begin>
		</Function>


		<!--
			*		getSystemByCode  |  Gets a system given the code.
			*  
			*		PARAMS
			*		 - (text) code  ::  System's code.
			*
			*		RETURN
			*	   - (single) fw_system_entity  ::  Returns the corresponding 'fw_system_entity' record. 
		-->
		<Function name="getSystemByCode" scope="public" doc="Gets a system given the code.">
			<Params>
				<Param name="code" type="text" required="true" doc="System's code"/>
			</Params>
			<Return type="single" doc="The corresponding 'fw_system_entity' record."/>

			<Begin>
				<Var name="system">
					<DataAccess method="load">
						<Param name="_entity">fw_system_entity</Param>
						<Param name="code"><Var name="PARAMS" key="code"/></Param>
					</DataAccess>
				</Var>

				<Return>
					<Var name="system"/>
				</Return>
			</Begin>
		</Function>


		<!--
			*		getSystemById  |  Gets a system given the id.
			*  
			*		PARAMS
			*		 - (int) id  ::  System's id.
			*
			*		RETURN
			*	   - (single) fw_system_entity  ::  Returns the corresponding 'fw_system_entity' record. 
		-->
		<Function name="getSystemById" scope="public" doc="Gets a system given the id.">
			<Params>
				<Param name="id" type="int" required="true" doc="System's id"/>
			</Params>
			<Return type="single" doc="The corresponding 'fw_system_entity' record."/>

			<Begin>
				<Var name="system">
					<DataAccess method="load">
						<Param name="_entity">fw_system_entity</Param>
						<Param name="id"><Var name="PARAMS" key="id"/></Param>
					</DataAccess>
				</Var>

				<Return>
					<Var name="system"/>
				</Return>
			</Begin>
		</Function>


		<!--
			*		getExternalSystems  |  Gets a list of all systems in entity management (whether they are active or not).
			*
			*		RETURN
			*		 - (multiple) fw_system_entity  ::  Returns all 'fw_system_entity' records.
		-->
		<Function name="getExternalSystems" scope="public" doc="Gets a list of all systems in entity management (whether they are active or not).">
			<Params/>
			<Return type="multiple" doc="All 'fw_system_entity' records."/>

			<Begin>
				<Var name="systems">
					<DataAccess method="getAll">
						<Param name="_entity">fw_system_entity</Param>
					</DataAccess>
				</Var>

				<Return>
					<Var name="systems"/>
				</Return>
			</Begin>
		</Function>


		<!--
			*		person.get.execute  |  Gets given person's systems data.
			*  
			*		PARAMS
			*    - (array) object  		::  Person's data;
			*    - (string) task    	::  Config key to get the systems' list from (if not supplied);
			*    - (string) taskList  ::  Systems' list (separated by comma) where to get the data from.
			*
			*		RETURN
			*		 - (array) systemsData  ::  Returns an array with the systems data.
		-->
		<Function name="person.get.execute" scope="public" doc="Gets given person's systems data.">
			<Params>
			 <Param name="object" type="array" required="true" doc="Person's data"/>
			 <Param name="task" type="string" required="false" doc="Config key to get the systems' list from (if not supplied)"/>
			 <Param name="taskList" type="string" required="false" doc="Systems' list (separated by comma) where to get the data from"/>
			</Params>
			<Return type="multiple" doc="An array with the systems data."/>

			<Begin>
				<Var name="systemsData"><Set/></Var>

				<!-- If no task list was supplied, gets it through the config key -->
				<If condition="$PARAMS->taskList == ''">
					<Then>
						<Var name="configuration" dump="true"><String.parse>entityManagement.$PARAMS->task</String.parse></Var>
						<Var name="taskList"><Config key="$configuration"/></Var>
					</Then>
					<Else>
						<Var name="taskList"><Var name="PARAMS" key="taskList"/></Var>
					</Else>
				</If>

				<!-- ____________________________		SYSTEMS   ____________________________ -->
				<Var name="tasks" dump="true"><ListToSet><Var name="taskList"/></ListToSet></Var>
				<Var name="all">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>all</Param>
					</SetLib>
				</Var>

				<!-- ______________		FRAMEWORK   ______________ -->
				<Var name="inFw">
					<SetLib method="ValueIn">
						<Param><Var name="tasks"/></Param>
						<Param>fw</Param>
					</SetLib>
				</Var>
				<If condition="($inFw == 1) || ($all == 1)">
					<Then>
						<!-- Gets person's data -->
						<Var name="fwPerson">
							<Call library="framework,fw.person,api" function="get">
								<Param name="id"><Var name="object" key="id"/></Param>
							</Call>
						</Var>
						<Var name="person">
							<Call library="gecol.core,person,api" function="get">
								<Param name="id"><Var name="fwPerson" key="id"/></Param>
							</Call>
						</Var>
						<Var name="fwPerson" key="email"><Var name="person" key="email"/></Var>
						<!-- Sets this data in systems' array --> 
            <Var name="entry"><Set/></Var>
            <Var name="entry" key="datasource">fw</Var>
            <Var name="entry" key="exists">
            	<If condition="$fwPerson->__length == 0">
								<Then><Int>0</Int></Then>
								<Else><Int>1</Int></Else>
							</If>
            </Var>
            <Var name="entry" key="uid"><Var name="fwPerson" key="uid"/></Var>
            <Var name="entry" key="givenName"><Var name="fwPerson" key="given_name"/></Var>
            <Var name="entry" key="surname"><Var name="fwPerson" key="surname"/></Var>
            <Var name="entry" key="email"><Var name="fwPerson" key="email"/></Var>
						<Var name="entry" key="specificKey">id</Var>
            <Var name="entry" key="specificValue"><Var name="fwPerson" key="id"/></Var>
						<Var name="entry" key="allData">
							<FormatterLib method="format">
								<Param>ArraySet</Param>
								<Param>format</Param>
								<Param><Var name="fwPerson"/></Param>
							</FormatterLib>
						</Var>
            <Var name="systemsData" key=""><Var name="entry"/></Var>
					</Then>
				</If>

				<!-- ______________		LDAP   ______________ -->
				<Var name="inLdap">
					<SetLib method="ValueIn">
						<Param><Var name="tasks"/></Param>
						<Param>ldap</Param>
					</SetLib>
				</Var>
				<If condition="($inLdap == 1) || ($all == 1)">
					<Then>
						<!-- Gets person LDAP's data -->
            <Var name="ldapUser" dump="true">
              <DataAccess method="load" datasource="CSCM-LX">
                <Param name="_attributes">dn,cn,sn,givenname,mail</Param>
                <Param name="id"><Var name="object" key="uid"/></Param>
              </DataAccess>
            </Var>
						<!-- Sets this data in systems' array --> 
            <Var name="entry"><Set/></Var>
            <Var name="entry" key="datasource">ldap</Var>
            <Var name="entry" key="exists">
            	<If condition="$ldapUser->cn == ''">
								<Then><Int>0</Int></Then>
								<Else><Int>1</Int></Else>
							</If>
            </Var>
            <Var name="entry" key="uid"><Var name="ldapUser" key="cn"/></Var>
            <Var name="entry" key="givenName"><Var name="ldapUser" key="givenname"/></Var>
            <Var name="entry" key="surname"><Var name="ldapUser" key="sn"/></Var>
            <Var name="entry" key="email"><Var name="ldapUser" key="mail"/></Var>
						<Var name="entry" key="specificKey">dn</Var>
            <Var name="entry" key="specificValue"><Var name="ldapUser" key="dn"/></Var>
						<Var name="entry" key="allData">
							<FormatterLib method="format">
								<Param>ArraySet</Param>
								<Param>format</Param>
								<Param><Var name="ldapUser"/></Param>
							</FormatterLib>
						</Var>						
            <Var name="systemsData" key=""><Var name="entry"/></Var>
					</Then>
				</If>

				<!-- ______________		MOODLE   ______________ -->
				<Var name="inMoodle">
					<SetLib method="ValueIn">
						<Param><Var name="tasks"/></Param>
						<Param>moodle</Param>
					</SetLib>
				</Var>
				<If condition="($inMoodle == 1) || ($all == 1)">
					<Then>
						<!-- Gets person's moodle data (STD, CLB, GRD, RSCM, CJG, CLB.AEC)-->
						<Var name="moodleUser" dump="true">
							<Call library="gecol.core,moodle,api" function="getUser">
								<Param name="username"><Var name="object" key="uid"/></Param>
								<Param name="log"><Var name="log"/></Param>
							</Call>
						</Var>
						<!-- Sets this data in systems' array --> 
            <Var name="entry"><Set/></Var>
            <Var name="entry" key="datasource">moodle</Var>
            <Var name="entry" key="exists">
            	<If condition="$moodleUser->username == ''">
								<Then><Int>0</Int></Then>
								<Else><Int>1</Int></Else>
							</If>
            </Var>
            <Var name="entry" key="uid"><Var name="moodleUser" key="username"/></Var>
            <Var name="entry" key="givenName"><Var name="moodleUser" key="firstname"/></Var>
            <Var name="entry" key="surname"><Var name="moodleUser" key="lastname"/></Var>
            <Var name="entry" key="email"><Var name="moodleUser" key="email"/></Var>
						<Var name="entry" key="specificKey">id_number</Var>
            <Var name="entry" key="specificValue"><Var name="moodleUser" key="idnumber"/></Var>
						<Var name="entry" key="allData">
							<FormatterLib method="format">
								<Param>ArraySet</Param>
								<Param>format</Param>
								<Param><Var name="moodleUser"/></Param>
							</FormatterLib>
						</Var>						
            <Var name="systemsData" key=""><Var name="entry"/></Var>
					</Then>
				</If>

				<!-- ______________		GOOGLE   ______________ -->
				<Var name="inGoogle">
					<SetLib method="ValueIn">
						<Param><Var name="tasks"/></Param>
						<Param>google</Param>
					</SetLib>
				</Var>
				<If condition="($inGoogle == 1) || ($all == 1)">
					<Then>
								<!-- Gets person's google data -->
								<Var name="googleUser" dump="true">
									<DataAccess method="load" datasource="googleAPIAdminSDK">
										<Param name="_entity">user</Param>
										<Param name="_attributes">id,email,given_name,surname,suspended</Param>											
										<Param name="uid"><Var name="object" key="uid"/></Param>
									</DataAccess>
								</Var>
						<!-- Sets this data in systems' array --> 
            <Var name="entry"><Set/></Var>
            <Var name="entry" key="datasource">google</Var>
            <Var name="entry" key="exists">
            	<If condition="$googleUser->email == ''">
								<Then><Int>0</Int></Then>
								<Else><Int>1</Int></Else>
							</If>
            </Var>
            <Var name="entry" key="uid"><Var name="object" key="uid"/></Var>
            <Var name="entry" key="givenName"><Var name="googleUser" key="given_name"/></Var>
            <Var name="entry" key="surname"><Var name="googleUser" key="surname"/></Var>
            <Var name="entry" key="email"><Var name="googleUser" key="email"/></Var>
						<Var name="entry" key="specificKey">id</Var>
            <Var name="entry" key="specificValue"><Var name="googleUser" key="id"/></Var>
						<Var name="entry" key="allData">
							<FormatterLib method="format">
								<Param>ArraySet</Param>
								<Param>format</Param>
								<Param><Var name="googleUser"/></Param>
							</FormatterLib>
						</Var>							
            <Var name="systemsData" key=""><Var name="entry"/></Var>
					</Then>
				</If>

				<!-- ______________		MICROSOFT   ______________ -->
				<Var name="inMicrosoft">
					<SetLib method="ValueIn">
						<Param><Var name="tasks"/></Param>
						<Param>microsoft</Param>
					</SetLib>
				</Var>
				<If condition="($inMicrosoft == 1) || ($all == 1)">
					<Then>
						<Try>
							<Instructions>
								<!-- Gets person's microsoft data -->
								<Var name="microsoftUser" dump="true">
									<DataAccess method="load" datasource="microsoftAPIAdminSDK">
										<Param name="_entity">user</Param>
										<Param name="uid"><Var name="object" key="uid"/></Param>
									</DataAccess>
								</Var>
							</Instructions>
							<Catch>
								<Var name="microsoftUser"><Null/></Var>
							</Catch>
						</Try>
						<!-- Sets this data in systems' array --> 
            <Var name="entry"><Set/></Var>
            <Var name="entry" key="datasource">microsoft</Var>
            <Var name="entry" key="exists">
            	<If condition="$microsoftUser->email == ''">
								<Then><Int>0</Int></Then>
								<Else><Int>1</Int></Else>
							</If>
            </Var>
            <Var name="entry" key="uid"><Var name="object" key="uid"/></Var>
            <Var name="entry" key="givenName"><Var name="microsoftUser" key="given_name"/></Var>
            <Var name="entry" key="surname"><Var name="microsoftUser" key="surname"/></Var>
            <Var name="entry" key="email"><Var name="microsoftUser" key="email"/></Var>
						<Var name="entry" key="specificKey">id</Var>
            <Var name="entry" key="specificValue"><Var name="microsoftUser" key="id"/></Var>
						<Var name="entry" key="allData">
							<FormatterLib method="format">
								<Param>ArraySet</Param>
								<Param>format</Param>
								<Param><Var name="microsoftUser"/></Param>
							</FormatterLib>
						</Var>							
            <Var name="systemsData" key=""><Var name="entry"/></Var>
					</Then>
				</If>

				<!-- ______________		ACCESS CONTROL   ______________ -->
				<Var name="inAccessControl">
					<SetLib method="ValueIn">
						<Param><Var name="tasks"/></Param>
						<Param>accessControl</Param>
					</SetLib>
				</Var>
				<If condition="($inAccessControl == 1) || ($all == 1)">
					<Then>
						<!-- Gets person's access control data -->
						<Var name="accessControlUser">
							<Call library="gecol.core,accessControl,api" function="getPersonAuthorization">
								<Param name="id_person"><Var name="object" key="id"/></Param>
							</Call>
						</Var>
						<!-- Sets this data in systems' array --> 
						<Var name="entry"><Set/></Var>
						<Var name="entry" key="datasource">accessControl</Var>
						<Var name="entry" key="exists">
							<If condition="$accessControlUser->id == ''">
								<Then><Int>0</Int></Then>
								<Else><Int>1</Int></Else>
							</If>
						</Var>
						<Var name="entry" key="uid"><Var name="accessControlUser" key="rfid"/></Var>
						<Var name="entry" key="givenName"><Var name="accessControlUser" key="display_name"/></Var>
						<Var name="entry" key="surname"><String/></Var>
						<Var name="entry" key="email"><String/></Var>
						<Var name="entry" key="specificKey">timetable</Var>
						<Var name="entry" key="specificValue">
							<String.parse>$accessControlUser->id_access_control_timetable_dow_2 $accessControlUser->id_access_control_timetable_dow_3 $accessControlUser->id_access_control_timetable_dow_4 $accessControlUser->id_access_control_timetable_dow_5 $accessControlUser->id_access_control_timetable_dow_6</String.parse>
						</Var>
						<Var name="entry" key="allData">
							<FormatterLib method="format">
								<Param>ArraySet</Param>
								<Param>format</Param>
								<Param><Var name="accessControlUser"/></Param>
							</FormatterLib>
						</Var>
						<Var name="systemsData" key=""><Var name="entry"/></Var>
					</Then>
				</If>

				<!-- ______________		PRIMAVERA ACCOUNT   ______________ -->
				<Var name="inPrimaveraAccount">
					<SetLib method="ValueIn">
						<Param><Var name="tasks"/></Param>
						<Param>primaveraAccount</Param>
					</SetLib>
				</Var>
				<If condition="($inPrimaveraAccount == 1) || ($all == 1)">
					<Then>
						<!-- Gets person's primavera account data -->
						<Var name="personService">
							<Call library="gecol.core,person,api" function="getService">
								<Param name="id"><Var name="object" key="id"/></Param>
							</Call>
						</Var>
						<Var name="primaveraAccount" dump="true">
							<Call library="gecol.core,primavera,api" function="getAccount">
								<Param name="id_account"><Var name="personService" key="id_account" /></Param>
								<Param name="_datasource">PRIServices</Param>
							</Call>
						</Var>
						<!-- Sets this data in systems' array --> 
						<Var name="entry"><Set/></Var>
						<Var name="entry" key="datasource">primaveraAccount</Var>
						<Var name="entry" key="exists">
							<If condition="$primaveraAccount->length != 0">
								<Then><Int>0</Int></Then>
								<Else><Int>1</Int></Else>
							</If>
						</Var>
						<Var name="entry" key="uid"><String/></Var>
						<Var name="entry" key="givenName"><Var name="object" key="display_name"/></Var>
						<Var name="entry" key="surname"><String/></Var>
						<Var name="entry" key="email"><String/></Var>
						<Var name="entry" key="specificKey">id_account</Var>
						<Var name="entry" key="specificValue"><Var name="primaveraAccount" key="id_account"/></Var>
						<Var name="entry" key="allData">
							<FormatterLib method="format">
								<Param>ArraySet</Param>
								<Param>format</Param>
								<Param><Var name="primaveraAccount" /></Param>
							</FormatterLib>
						</Var>
						<Var name="systemsData" key=""><Var name="entry" /></Var>
					</Then>
				</If>

				<!-- ______________		PRIMAVERA		______________ -->
				<Var name="inPrimavera">
					<SetLib method="ValueIn">
						<Param><Var name="tasks"/></Param>
						<Param>primavera</Param>
					</SetLib>
				</Var>
				<If condition="($inPrimavera == 1) || ($all == 1)">
					<Then>
						<!-- Gets person's primavera data -->
						<Var name="personService">
							<Call library="gecol.core,person,api" function="getService">
								<Param name="id"><Var name="object" key="id"/></Param>
							</Call>
						</Var>
						<Var name="primaveraUser" dump="true">
							<Call library="gecol.core,primavera,api" function="getClient">
								<Param name="id_client"><Var name="personService" key="id_client"/></Param>
								<Param name="_datasource">PRIServices</Param>
							</Call>
						</Var>
						<!-- Sets this data in systems' array --> 
						<Var name="entry"><Set/></Var>
						<Var name="entry" key="datasource">primavera</Var>
						<Var name="entry" key="exists">
							<If condition="$primaveraUser->id_client == ''">
								<Then><Int>0</Int></Then>
								<Else><Int>1</Int></Else>
							</If>
						</Var>
						<Var name="entry" key="uid"><String/></Var>
						<Var name="entry" key="givenName"><Var name="primaveraUser" key="name"/></Var>
						<Var name="entry" key="surname"><String/></Var>
						<Var name="entry" key="email"><String/></Var>
						<Var name="entry" key="specificKey">id_client</Var>
						<Var name="entry" key="specificValue"><Var name="primaveraUser" key="id_client"/></Var>
						<Var name="entry" key="allData">
							<FormatterLib method="format">
								<Param>ArraySet</Param>
								<Param>format</Param>
								<Param><Var name="primaveraUser"/></Param>
							</FormatterLib>
						</Var>
						<Var name="systemsData" key=""><Var name="entry"/></Var>
					</Then>
				</If>

				<!-- Updates all systems' cache -->
				<ForEach var="systemsData" item="systemStatus">
					<!-- Gets the system -->
					<Var name="system">
						<DataAccess method="load">
							<Param name="_entity">fw_system_entity</Param>
							<Param name="code"><Var name="systemStatus" key="datasource"/></Param>
						</DataAccess>
					</Var>
					<!-- Sets specific key and value -->
					<Var name="data"><Set/></Var>
					<Var name="data" key="specificKey"><Var name="systemStatus" key="specificKey"/></Var>
					<Var name="data" key="specificValue"><Var name="systemStatus" key="specificValue"/></Var>
					<!-- Checks if there's already a cached value -->
					<Var name="cache">
						<DataAccess method="load">
							<Param name="_entity">fw_system_entity_status_cache</Param>
							<Param name="id_person"><Var name="object" key="id"/></Param>
							<Param name="id_system_entity"><Var name="system" key="id"/></Param>
						</DataAccess>
					</Var>
					<!-- If not, creates a new record. Otherwise, updates the existing one -->
					<If condition="$cache->__length == 0">
						<Then>
							<!-- Creates the record -->
							<Var name="newCache" key="id">
								<DataAccess method="insert">
									<Param name="_entity">fw_system_entity_status_cache</Param>
									<Param name="id_person"><Var name="object" key="id"/></Param>
									<Param name="id_system_entity"><Var name="system" key="id"/></Param>
									<Param name="id_status"><Var name="systemStatus" key="exists"/></Param>
									<Param name="data"><SetToJson><Var name="data"/></SetToJson></Param>
									<Param name="_id_updater"><Var name="USER" key="id"/></Param>
									<Param name="_modification"><Now/></Param>
									<Param name="_modification_ip"><Var name="USER" key="ip"/></Param>
									<Param name="_id_creator"><Var name="USER" key="id"/></Param>
									<Param name="_creation"><Now/></Param>
									<Param name="_creation_ip"><Var name="USER" key="ip"/></Param>
								</DataAccess>
							</Var>
							<!-- Gets the record just created -->
							<Var name="newCache">
								<DataAccess method="load">
									<Param name="_entity">fw_system_entity_status_cache</Param>
									<Param name="id"><Var name="newCache" key="id"/></Param>
								</DataAccess>
							</Var>
							<!-- Logs this action -->
							<Call library="framework,log,api" function="add">
								<Param name="type">framework,em.execution,api</Param>
								<Param name="action">insert</Param>
								<Param name="log_key"><Var name="newCache" key="id"/></Param>
								<Param name="context_data">
									<UtilsLib method="jsonEncode">
										<Param><Var name="newCache"/></Param>
									</UtilsLib>
								</Param>
								<Param name="message">
									<Lang key="logSystemCacheInsert">
										<Param><Var name="newCache" key="id"/></Param>
									</Lang>
								</Param>
							</Call>
						</Then>
						<Else>
							<!-- Updates the record -->
							<DataAccess method="update">
								<Param name="_entity">fw_system_entity_status_cache</Param>
								<Param name="id_person" pk="true"><Var name="object" key="id"/></Param>
								<Param name="id_system_entity" pk="true"><Var name="system" key="id"/></Param>
								<Param name="id_status"><Var name="systemStatus" key="exists"/></Param>
								<Param name="data"><SetToJson><Var name="data"/></SetToJson></Param>
								<Param name="_id_updater"><Var name="USER" key="id"/></Param>
								<Param name="_modification"><Now/></Param>
								<Param name="_modification_ip"><Var name="USER" key="ip"/></Param>
							</DataAccess>
							<!-- Gets the udpated record -->
							<Var name="updatedCache">
								<DataAccess method="load">
									<Param name="_entity">fw_system_entity_status_cache</Param>
									<Param name="id"><Var name="cache" key="id"/></Param>
								</DataAccess>
							</Var>
							<Var name="records"><Set/></Var>
							<Var name="records" key=""><Var name="cache"/></Var>
							<Var name="records" key=""><Var name="updatedCache"/></Var>
							<!-- Logs this action -->
							<Call library="framework,log,api" function="add">
								<Param name="type">framework,em.execution,api</Param>
								<Param name="action">update</Param>
								<Param name="log_key"><Var name="cache" key="id"/></Param>
								<Param name="context_data">
									<UtilsLib method="jsonEncode">
										<Param><Var name="records"/></Param>
									</UtilsLib>
								</Param>
								<Param name="message">
									<Lang key="logSystemCacheUpdate">
										<Param><Var name="cache" key="id"/></Param>
									</Lang>
								</Param>
							</Call>
						</Else>
					</If>
				</ForEach>
				
				<Return>
					<Var name="systemsData"/>
				</Return>
			</Begin>
		</Function>


		<!--
			*		person.insert.execute  |  Creates a person in all systems.
			*  
			*		PARAMS
			*    - (array) object  		::  Person's data;
			*    - (string) task    	::  Config key to get the systems' list from (if not supplied);
			*    - (string) taskList  ::  Systems' list (separated by comma) where to create the person.
			*
			*		RETURN
			*		 - (multiple) log  ::  Returns action's propagation log.
		-->
		<Function name="person.insert.execute" scope="public" doc="Creates a person in all systems.">
			<Params>
			 <Param name="object" type="array" required="true" doc="Person's data"/>
			 <Param name="task" type="string" required="false" doc="Config key to get the systems' list from (if not supplied)"/>
			 <Param name="taskList" type="string" required="false" doc="Systems' list (separated by comma) where to create the person"/>
			</Params>
			<Return type="multiple" doc="Action's propagation log"/>

			<Begin>
				<!-- $object->person_type_code == 'STD' || $object->person_type_code == 'CLB' || $object->person_type_code == 'GRD' || $object->person_type_code == 'RSCM' || $object->person_type_code == 'CJG' || $object->person_type_code == 'CLB.AEC' -->
				
				<!-- If no password was supplied, generates a new one -->
				<If condition="$object->password == ''">
					<Then>
						<!-- Generates a new password for this person -->
						<Var name="password" dump="true">
							<Call library="framework,authentication,api" function="generatePassword"/>
						</Var>
					</Then>
					<Else>
						<Var name="password"><Var name="object" key="password"/></Var>
					</Else>
				</If>

				<!-- If no task list was supplied, gets it through the config key -->
				<If condition="$PARAMS->taskList == ''">
					<Then>
						<Var name="configuration"><String.parse>entityManagement.$PARAMS->task</String.parse></Var>
						<Var name="taskList"><Config key="$configuration"/></Var>
					</Then>
					<Else>
						<Var name="taskList"><Var name="PARAMS" key="taskList"/></Var>
					</Else>
				</If>

				<!-- Sets result log -->
				<Var name="log"><Set/></Var>
				<Var name="logEntry" key="action"><String.parse>List of tasks to execute: $taskList</String.parse></Var>
				<Var name="logEntry" key="result">OK</Var>
				<Var name="log" key=""><Var name="logEntry"/></Var>

				<!-- ____________________________		SYSTEMS   ____________________________ -->
				<Var name="tasks" dump="true"><ListToSet><Var name="taskList"/></ListToSet></Var>
				<Var name="all">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>all</Param>
					</SetLib>
				</Var>

				<!-- ______________		LDAP   ______________ -->
				<Var name="inLdap">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>ldap</Param>
					</SetLib>
				</Var>
				<If condition="$inLdap == 1 || $all == 1">
					<Then>
						<!--<Trace><String.parse>Creating LDAP user $object->uid</String.parse></Trace>-->
						<!-- Creates the person in Ldap -->
            <Var name="ldapUser" dump="true">
              <DataAccess method="insert" datasource="CSCM-LX">
                <Param name="type">User</Param>
                <Param name="id"><Var name="object" key="id"/></Param>
                <Param name="uid"><Var name="object" key="uid"/></Param>
								<Param name="pager"><Var name="object" key="id_card"/></Param>								
                <Param name="name"><Var name="object" key="given_name"/></Param>
                <Param name="email"><Var name="object" key="email"/></Param>
                <Param name="password"><Var name="password"/></Param>
                <Param name="surname"><Var name="object" key="surname"/></Param>
                <Param name="display_name"><Var name="object" key="display_name"/></Param>
                <Param name="gecos"><Var name="object" key="id"/></Param>
                <Param name="personTypeCode"><Var name="object" key="person_type_code"/></Param>
              </DataAccess>
            </Var>
						<!-- Workaround to flush caches? Load the user after creation!!! -->
						<!-- Sleeping for 4 seconds to give time before creating user in moodle -->
						<Sleep>4</Sleep>
						<!-- Gets the record just created -->
            <Var name="newLdapUser">
              <DataAccess method="load" datasource="CSCM-LX">
                <Param name="_attributes">dn,cn,sn,givenname,mail</Param>
                <Param name="id"><Var name="object" key="uid"/></Param>
              </DataAccess>
            </Var>
						<!-- Logs this action -->
						<Call library="framework,log,api" function="add">
							<Param name="type">framework,em.execution,api</Param>
							<Param name="action">insert_datasource</Param>
							<Param name="log_key"><Var name="object" key="id"/></Param>
							<Param name="context_data">
								<UtilsLib method="jsonEncode">
									<Param><Var name="newLdapUser"/></Param>
								</UtilsLib>
							</Param>
							<Param name="message">
								<Lang key="logDataSourceInsert">
									<Param><Var name="object" key="id"/></Param>
									<Param>ldap</Param>
								</Lang>
							</Param>
						</Call>
						<!-- Adds the Ldap entry to action's log -->
						<Var name="logEntry" key="action"><String.parse>Creating person in LDAP(AD)  ::  Status: $newLdapUser->__toStr</String.parse></Var>						            
						<Var name="logEntry" key="result">
							<If condition="$newLdapUser->__length == 0 || $newLdapUser == 'false'">
								<Then>ERROR</Then>
								<Else>OK</Else>
							</If>
						</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
					</Then>
				</If>
				 
				<!-- ______________		MOODLE   ______________ -->
				<Var name="inMoodle">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>moodle</Param>
					</SetLib>
				</Var>
				<If condition="$inMoodle == 1 || $all == 1">
					<Then>
						<Trace><String.parse>Creating moodle user '$object->uid'</String.parse></Trace>
						<!-- Creates the person in Moodle (STD, CLB, GRD, RSCM, CJG, CLB.AEC) -->
						<Var name="statusMoodle" dump="true">
							<Call library="gecol.core,moodle,api" function="createUserFromPerson">
								<Param name="person"><Var name="object"/></Param>
								<Param name="log" var="log"><Var name="log"/></Param>
							</Call>
						</Var>
						<!-- Gets the record just created -->
						<Var name="moodleUser">
							<Call library="gecol.core,moodle,api" function="getUser">
								<Param name="username"><Var name="object" key="uid"/></Param>
							</Call>
						</Var>
						<!-- Logs this action -->
						<Call library="framework,log,api" function="add">
							<Param name="type">framework,em.execution,api</Param>
							<Param name="action">insert_datasource</Param>
							<Param name="log_key"><Var name="object" key="id"/></Param>
							<Param name="context_data">
								<UtilsLib method="jsonEncode">
									<Param><Var name="moodleUser"/></Param>
								</UtilsLib>
							</Param>
							<Param name="message">
								<Lang key="logDataSourceInsert">
									<Param><Var name="object" key="id"/></Param>
									<Param>moodle</Param>
								</Lang>
							</Param>
						</Call>
						<!-- Adds the Moodle entry to action's log -->
						<Var name="logEntry" key="action"><String.parse>Creating person in Moodle  ::  Status: $statusMoodle</String.parse></Var>						            
						<Var name="logEntry" key="result">
							<If condition="$statusMoodle &gt; 0">
								<Then>OK</Then>
								<Else>ERROR</Else>
							</If>
						</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
						<!-- Rebuilds person in Moodle -->
						<Var name="schoolYear">
							<Call library="gecol.core,schoolYear,api" function="getCurrent"/>
						</Var>
						<Var name="outLog" dump="true">
							<Call library="gecol.core,moodle,api" function="personRebuild">
								<Param name="id_school_year"><Var name="schoolYear" key="id"/></Param>
								<Param name="id_person"><Var name="object" key="id"/></Param>
							</Call>
						</Var>
						<!-- Adds rebuild Moodle entry to action's log -->
						<ForEach var="outLog" item="outLogEntry">
							<Var name="logEntry" key="action"><Var name="outLogEntry" key="action"/></Var>						            
							<Var name="logEntry" key="result"><Var name="outLogEntry" key="result"/></Var>
							<Var name="log" key=""><Var name="logEntry"/></Var>
						</ForEach>
					</Then>
				</If>
				
				<!-- ______________		GOOGLE   ______________ -->
				<Var name="inGoogle">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>google</Param>
					</SetLib>
				</Var>
				<If condition="$inGoogle == 1 || $all == 1">
					<Then>
						<Trace><String.parse>Creating Google user $object->uid</String.parse></Trace>
						<Var name="object" dump="true"/>
						<!-- Create the person in Google (STD, CLB) -->
						<Var name="statusGoogle" dump="true">
							<DataAccess method="insert" datasource="googleAPIAdminSDK">
								<Param name="_entity">user</Param>
								<Param name="uid"><Var name="object" key="uid"></Var></Param>
								<Param name="given_name"><Var name="object" key="given_name"></Var></Param>
								<Param name="surname"><Var name="object" key="surname"></Var></Param>
								<Param name="email"><Var name="object" key="email"></Var></Param>
								<Param name="password"><Var name="password"/></Param>
							</DataAccess>  
						</Var>
						<!-- Gets the record just created -->
						<Var name="googleUser" dump="true">
							<DataAccess method="load" datasource="googleAPIAdminSDK">
								<Param name="_entity">user</Param>
								<Param name="_attributes">id,email,given_name,surname,suspended</Param>											
								<Param name="uid"><Var name="object" key="uid"/></Param>
							</DataAccess>
						</Var>
						<!-- Logs this action -->
						<Call library="framework,log,api" function="add">
							<Param name="type">framework,em.execution,api</Param>
							<Param name="action">insert_datasource</Param>
							<Param name="log_key"><Var name="object" key="id"/></Param>
							<Param name="context_data">
								<UtilsLib method="jsonEncode">
									<Param><Var name="googleUser"/></Param>
								</UtilsLib>
							</Param>
							<Param name="message">
								<Lang key="logDataSourceInsert">
									<Param><Var name="object" key="id"/></Param>
									<Param>google</Param>
								</Lang>
							</Param>
						</Call>
						<!-- Adds the Google entry to action's log -->
						<Var name="logEntry" key="action"><String.parse>Creating person in Google  ::  Status: $statusGoogle</String.parse></Var>						            
						<Var name="logEntry" key="result">
							<If condition="$statusGoogle == 0">
								<Then>OK</Then>
								<Else>ERROR</Else>
							</If>
						</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
					</Then>
				</If>
				
				<!-- ______________		MICROSOFT   ______________ -->
				<Var name="inMicrosoft">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>microsoft</Param>
					</SetLib>
				</Var>
				<If condition="$inMicrosoft == 1 || $all == 1">
					<Then>
						<Trace><String.parse>Creating Microsoft user $object->uid</String.parse></Trace>
						<!-- Creates the person in Microsoft (CLB) -->
						<Var name="statusMicrosoft" dump="true">
							<DataAccess method="insert" datasource="microsoftAPIAdminSDK">
								<Param name="_entity">user</Param>
								<Param name="uid"><Var name="object" key="uid"/></Param>								
								<Param name="given_name"><Var name="object" key="given_name"/></Param>
								<Param name="surname"><Var name="object" key="surname"/></Param>
								<Param name="password"><Var name="password"/></Param>
							</DataAccess>
						</Var>
						<!-- Gets the record just created -->
						<Var name="microsoftUser">
							<DataAccess method="load" datasource="microsoftAPIAdminSDK">
								<Param name="_entity">user</Param>
								<Param name="uid"><Var name="object" key="uid"/></Param>
							</DataAccess>
						</Var>
						<!-- Logs this action -->
						<Call library="framework,log,api" function="add">
							<Param name="type">framework,em.execution,api</Param>
							<Param name="action">insert_datasource</Param>
							<Param name="log_key"><Var name="object" key="id"/></Param>
							<Param name="context_data">
								<UtilsLib method="jsonEncode">
									<Param><Var name="microsoftUser"/></Param>
								</UtilsLib>
							</Param>
							<Param name="message">
								<Lang key="logDataSourceInsert">
									<Param><Var name="object" key="id"/></Param>
									<Param>microsoft</Param>
								</Lang>
							</Param>
						</Call>
						<!-- Adds microsoft entry to action's log -->
						<Var name="logEntry" key="action"><String.parse>Creating user in Microsoft  ::  Status: $statusMicrosoft</String.parse></Var>						            
						<Var name="logEntry" key="result">
							<If condition="$statusMicrosoft == 0">
								<Then>OK</Then>
								<Else>ERROR</Else>
							</If>
						</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
					</Then>
				</If>				

				<!-- ______________		ACCESS CONTROL   ______________ -->
				<Var name="inAccessControl">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>accessControl</Param>
					</SetLib>
				</Var>
				<If condition="$inAccessControl == 1 || $all == 1">
					<Then>
						<Trace><String.parse>Creating Access Control user $object->uid</String.parse></Trace>
						<!-- Creates the person in Access Control -->
						<Var name="acResult" dump="true">
							<Call library="gecol.core,accessControl,api" function="addPerson">
								<Param name="id_person"><Var name="object" key="id"></Var></Param>
							</Call>
						</Var>
						<!-- Gets the record just created -->
						<Var name="accessControlUser">
							<Call library="gecol.core,accessControl,api" function="getPersonAuthorization">
								<Param name="id_person"><Var name="object" key="id"/></Param>
							</Call>
						</Var>
						<!-- Logs this action -->
						<Call library="framework,log,api" function="add">
							<Param name="type">framework,em.execution,api</Param>
							<Param name="action">insert_datasource</Param>
							<Param name="log_key"><Var name="object" key="id"/></Param>
							<Param name="context_data">
								<UtilsLib method="jsonEncode">
									<Param><Var name="accessControlUser"/></Param>
								</UtilsLib>
							</Param>
							<Param name="message">
								<Lang key="logDataSourceInsert">
									<Param><Var name="object" key="id"/></Param>
									<Param>accessControl</Param>
								</Lang>
							</Param>
						</Call>
						<!-- Adds access control entry to action's log -->
						<Var name="logEntry" key="action"><String.parse>Creating person in Access Control  ::  Status: $acResult</String.parse></Var>						            
						<Var name="logEntry" key="result">
							<If condition="$acResult == 0 ">
								<Then>OK</Then>
								<Else>ERROR</Else>
							</If>
						</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
					</Then>
				</If>

				<!-- ______________		PRIMAVERA ACCOUNT   ______________ -->
				<Var name="inPrimaveraAccount">
					<SetLib method="ValueIn">
					<Param><Var name="tasks"/></Param>
					<Param>primaveraAccount</Param>
					</SetLib>
				</Var>
				<If condition="$inPrimaveraAccount == 1 || $all == 1">
					<Then>
						<Try>
							<Instructions>
								<Trace><String.parse>Creating Primavera Account user $object->uid</String.parse></Trace>
								<!-- Create the person account in invoicing system -->
								<Var name="newAccount">
									<Call library="gecol.core,service,api" function="addAccount">
										<Param name="id_service"><Var name="object" key="id"/></Param>
									</Call>
								</Var>
								<!-- Gets the record just created -->
								<Var name="personService">
									<Call library="gecol.core,person,api" function="getService">
										<Param name="id"><Var name="object" key="id"/></Param>
									</Call>
								</Var>
								<Var name="primaveraAccount">
									<Call library="gecol.core,primavera,api" function="getAccount">
										<Param name="id_account"><Var name="personService" key="id_account"/></Param>
										<Param name="_datasource">PRIServices</Param>
									</Call>
								</Var>
								<!-- Logs this action -->
								<Call library="framework,log,api" function="add">
									<Param name="type">framework,em.execution,api</Param>
									<Param name="action">insert_datasource</Param>
									<Param name="log_key"><Var name="object" key="id"/></Param>
									<Param name="context_data">
										<UtilsLib method="jsonEncode">
											<Param><Var name="primaveraAccount"/></Param>
										</UtilsLib>
									</Param>
									<Param name="message">
										<Lang key="logDataSourceInsert">
											<Param><Var name="object" key="id"/></Param>
											<Param>primaveraAccount</Param>
										</Lang>
									</Param>
								</Call>
								<!-- Adds the Primavera Account entry to action's log -->
								<Var name="logEntry" key="action"><String.parse>Creating person account in Primavera  ::  Account: $newAccount->reference</String.parse></Var>
								<Var name="logEntry" key="result">
									<If condition="$newAccount->reference != ''">
										<Then>OK</Then>
										<Else>ERROR</Else>
									</If>
								</Var>								
								<Var name="log" key=""><Var name="logEntry"/></Var>								
							</Instructions>
							<Catch>
								<Var name="EXCEPTION" dump="true"/>
								<Var name="logEntry" key="action"><String.parse>Creating person account in Primavera  ::  Status: $EXCEPTION->message</String.parse></Var>						            
								<Var name="logEntry" key="result">ERROR</Var>
								<Var name="log" key=""><Var name="logEntry"/></Var>								
							</Catch>
						</Try>
					</Then>
				</If>

				<!-- ______________		PRIMAVERA   ______________ -->
				<Var name="inPrimavera">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>primavera</Param>
					</SetLib>
				</Var>
				<If condition="$inPrimavera == 1 || $all == 1">
					<Then>
						<Try>
							<Instructions>
								<Trace><String.parse>Creating Primavera user $object->u	id</String.parse></Trace>
								<!-- Creates person in financial service application (STD, CLB, GRD, RSCM, CJG, CLB.AEC) -->
								<Var name="newPrimaveraUser">
									<Call library="gecol.core,primavera,api" function="saveClientByPerson">
										<Param name="id_person"><Var name="object" key="id"/></Param>
										<Param name="_datasource">PRIServices</Param>
									</Call>
								</Var>
								<!-- Gets the record just created -->
								<Var name="personService">
									<Call library="gecol.core,person,api" function="getService">
										<Param name="id"><Var name="object" key="id"/></Param>
									</Call>
								</Var>
								<Var name="primaveraUser">
									<Call library="gecol.core,primavera,api" function="getClient">
										<Param name="id_client"><Var name="personService" key="id_client"/></Param>
										<Param name="_datasource">PRIServices</Param>
									</Call>
								</Var>
								<!-- Logs this action -->
								<Call library="framework,log,api" function="add">
									<Param name="type">framework,em.execution,api</Param>
									<Param name="action">insert_datasource</Param>
									<Param name="log_key"><Var name="object" key="id"/></Param>
									<Param name="context_data">
										<UtilsLib method="jsonEncode">
											<Param><Var name="primaveraUser"/></Param>
										</UtilsLib>
									</Param>
									<Param name="message">
										<Lang key="logDataSourceInsert">
											<Param><Var name="object" key="id"/></Param>
											<Param>primavera</Param>
										</Lang>
									</Param>
								</Call>
								<!-- Adds the Primavera entry to action's log -->
								<Var name="logEntry" key="action"><String.parse>Creating person in Primavera  ::  Status: $newPrimaveraUser->reference $newPrimaveraUser->error</String.parse></Var>						            
								<Var name="logEntry" key="result">
									<If condition="$newPrimaveraUser->success == 1">
										<Then>OK</Then>
										<Else>ERROR</Else>
									</If>
								</Var>
								<Var name="log" key=""><Var name="logEntry"/></Var>								
							</Instructions>
							<Catch>
								<Var name="EXCEPTION" dump="true"/>
								<Var name="logEntry" key="action"><String.parse>Creating person in Primavera  ::  Status: $EXCEPTION->message</String.parse></Var>						            
								<Var name="logEntry" key="result">ERROR</Var>
								<Var name="log" key=""><Var name="logEntry"/></Var>								
							</Catch>
						</Try>
					</Then>
				</If>

				<!-- ______________		PASSWORD (SET)   ______________ -->
				<If condition="$inLdap == 1 || $all == 1">
					<Then>
						<Trace><String.parse>Setting password $password for user $object->uid</String.parse></Trace>
						<!-- Sets a new password to the person -->
						<Call library="framework,authentication,api" function="adminSetPassword">
							<Param name="uid"><Var name="object" key="uid"/></Param>
							<Param name="newPassword"><Var name="password"/></Param>
							<Param name="confirmNewPassword"><Var name="password"/></Param>
						</Call>
						<!-- Adds the Admin Set Password entry to action's log -->
						<Var name="logEntry" key="action"><String.parse>Setting password</String.parse></Var>						            
						<Var name="logEntry" key="result">OK</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
					</Then>
				</If>

				<!-- ______________		PASSWORD (SEND)   ______________ -->
				<Var name="inSendPassword" dump="true">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>sendPassword</Param>
					</SetLib>
				</Var>
				<If condition="$inSendPassword == 1 || $all == 1">
					<Then>
						<Trace><String.parse>Sending a new password to the person ($object->id) by email ($object->email)</String.parse></Trace>
						<!-- Sends a new password to the person -->
						<Call library="gecol.core,authentication,api" function="sendNewPassword">
							<Param name="id_person"><Var name="object" key="id"/></Param>
							<Param name="password"><Var name="password"/></Param>
						</Call>
						<!-- Adds the Password entry to action's log -->
						<Var name="logEntry" key="action"><String.parse>Sending password to the person ($object->id) by email ($object->email)</String.parse></Var>						            
						<Var name="logEntry" key="result">OK</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
					</Then>
				</If>
				
				<Var name="log" dump="true"/>

				<Return>
					<Var name="log"/>
				</Return>
			</Begin>
		</Function>


		<!--
			*		person.update.execute  |  Updates given person's systems data.
			*  
			*		PARAMS
			*    - (array) object  		::  Person's data;
			*    - (string) task    	::  Config key to get the systems' list from (if not supplied);
			*    - (string) taskList  ::  Systems' list (separated by comma) where to update the data.
			*
			*		RETURN
			*		 - (multiple) log  ::  Returns action's propagation log.
		-->
		<Function name="person.update.execute" scope="public" doc="Person update actions to execute">
			<Params>
			 <Param name="object" type="array" required="true" doc="Person's data"/>
			 <Param name="task" type="string" required="true" doc="Config key to get the systems' list from (if not supplied)"/>
			 <Param name="taskList" type="string" required="true" doc="Systems' list (separated by comma) where to update the data"/>
			</Params>
			<Return type="multiple" doc="Action's propagation log"/>
			<Begin>
				<!-- $object->person_type_code == 'STD' || $object->person_type_code == 'CLB' || $object->person_type_code == 'GRD' || $object->person_type_code == 'RSCM' || $object->person_type_code == 'CJG' || $object->person_type_code == 'CLB.AEC' -->
				<!-- If no task list was supplied, gets it through the config key -->
				<If condition="$PARAMS->taskList == ''">
					<Then>
						<Var name="configuration" dump="true"><String.parse>entityManagement.$PARAMS->task</String.parse></Var>
						<Var name="taskList" dump="true"><Config key="$configuration"/></Var>
					</Then>
					<Else>
						<Var name="taskList" dump="true"><Var name="PARAMS" key="taskList"/></Var>
					</Else>
				</If>

				<!-- Sets result log -->
				<Var name="log"><Set/></Var>
				<Var name="logEntry" key="action"><String.parse>List of tasks to execute: $taskList</String.parse></Var>
				<Var name="logEntry" key="result">OK</Var>
				<Var name="log" key=""><Var name="logEntry"/></Var>

				<!-- ____________________________		SYSTEMS   ____________________________ -->
				<Var name="tasks" dump="true"><ListToSet><Var name="taskList"/></ListToSet></Var>
				<Var name="all" dump="true">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>all</Param>
					</SetLib>
				</Var>
				
				<!-- ______________		LDAP   ______________ -->
				<Var name="inLdap" dump="true">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>ldap</Param>
					</SetLib>
				</Var>
				<Trace><String.parse>Updating LDAP ($inLdap) user $object->uid</String.parse></Trace>
				<If condition="$inLdap == 1 || $all == 1">
					<Then>
						<!-- Gets person's current Ldap record -->
						<Var name="ldapUser">
              <DataAccess method="load" datasource="CSCM-LX">
                <Param name="_attributes">dn,cn,sn,givenname,mail</Param>
                <Param name="id"><Var name="object" key="uid"/></Param>
              </DataAccess>
            </Var>
						<!-- Updates Ldap user -->
            <Var name="_ldapUser" dump="true">
              <DataAccess method="update" datasource="CSCM-LX">
                <Param name="type">User</Param>
                <Param name="id"><Var name="object" key="id"/></Param>
                <Param name="uid"><Var name="object" key="uid"/></Param>
								<Param name="pager"><Var name="object" key="id_card"/></Param>
                <Param name="name"><Var name="object" key="given_name"/></Param>
                <Param name="email"><Var name="object" key="email"/></Param>
                <Param name="surname"><Var name="object" key="surname"/></Param>
                <Param name="display_name"><Var name="object" key="display_name"/></Param>
                <Param name="gecos"><Var name="object" key="id"/></Param>
                <Param name="personTypeCode"><Var name="object" key="person_type_code"/></Param>
              </DataAccess>
            </Var>
						<!-- Gets updated Ldap record -->
						<Var name="updatedLdapUser">
              <DataAccess method="load" datasource="CSCM-LX">
                <Param name="_attributes">dn,cn,sn,givenname,mail</Param>
                <Param name="id"><Var name="object" key="uid"/></Param>
              </DataAccess>
            </Var>
						<Var name="records"><Set/></Var>
						<Var name="records" key=""><Var name="ldapUser"/></Var>
						<Var name="records" key=""><Var name="updatedLdapUser"/></Var>
						<!-- Logs this action -->
						<Call library="framework,log,api" function="add">
							<Param name="type">framework,em.execution,api</Param>
							<Param name="action">update_datasource</Param>
							<Param name="log_key"><Var name="object" key="id"/></Param>
							<Param name="context_data">
								<UtilsLib method="jsonEncode">
									<Param><Var name="records"/></Param>
								</UtilsLib>
							</Param>
							<Param name="message">
								<Lang key="logDataSourceUpdate">
									<Param><Var name="object" key="id"/></Param>
									<Param>ldap</Param>
								</Lang>
							</Param>
						</Call>
						<!-- Adds the Ldap entry to action's log -->
						<Var name="logEntry" key="action"><String.parse>Updating person in LDAP(AD)</String.parse></Var>						            
						<Var name="logEntry" key="result">
							<If condition="$_ldapUser->__length == 0 || $_ldapUser == 'false'">
								<Then>ERROR</Then>
								<Else>OK</Else>
							</If>
						</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
          </Then>
        </If>

				<!-- ______________		MOODLE   ______________ -->
				<Var name="inMoodle" dump="true">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>moodle</Param>
					</SetLib>
				</Var>
				<Trace><String.parse>Updating Moodle ($inMoodle) user $object->uid</String.parse></Trace>
				<!-- Updates in Moodle (STD, CLB, GRD, RSCM, CJG, CLB.AEC) -->
				<If condition="$inMoodle == 1 || $all == 1">
					<Then>
						<!-- Gets person's current Moodle record -->
						<Var name="moodleUser">
							<Call library="gecol.core,moodle,api" function="getUser">
								<Param name="username"><Var name="object" key="uid"/></Param>
							</Call>
						</Var>
						<!-- Updates Moodle user -->
						<Call library="gecol.core,moodle,api" function="updateUser">
							<Param name="username"><Var name="object" key="uid"/></Param>
							<Param name="firstname"><Var name="object" key="given_name"/></Param>
							<Param name="lastname"><Var name="object" key="surname"/></Param>
							<Param name="email"><Var name="object" key="email"/></Param>
							<Param name="idnumber"><Var name="object" key="id"/></Param>
						</Call>			
						<!-- Gets updated Moodle record -->
						<Var name="updatedMoodleUser">
							<Call library="gecol.core,moodle,api" function="getUser">
								<Param name="username"><Var name="object" key="uid"/></Param>
							</Call>
						</Var>
						<Var name="records"><Set/></Var>
						<Var name="records" key=""><Var name="moodleUser"/></Var>
						<Var name="records" key=""><Var name="updatedMoodleUser"/></Var>
						<!-- Logs this action -->
						<Call library="framework,log,api" function="add">
							<Param name="type">framework,em.execution,api</Param>
							<Param name="action">update_datasource</Param>
							<Param name="log_key"><Var name="object" key="id"/></Param>
							<Param name="context_data">
								<UtilsLib method="jsonEncode">
									<Param><Var name="records"/></Param>
								</UtilsLib>
							</Param>
							<Param name="message">
								<Lang key="logDataSourceUpdate">
									<Param><Var name="object" key="id"/></Param>
									<Param>moodle</Param>
								</Lang>
							</Param>
						</Call>
						<!-- Adds the Moodle entry to action's log -->
						<Var name="logEntry" key="action"><String.parse>Updating person in Moodle  ::  Status: $statusMoodle</String.parse></Var>            
						<Var name="logEntry" key="result">
							<If condition="$statusMoodle === 0">
								<Then>OK</Then>
								<Else>ERROR</Else>
							</If>
						</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
						<!-- Rebuilds person in Moodle -->
						<Var name="logEntry" key="action"><String.parse>Rebuilding person in Moodle</String.parse></Var>
						<Try>
							<Instructions>
								<Var name="schoolYear">
									<Call library="gecol.core,schoolYear,api" function="getCurrent"/>
								</Var>
								<Var name="outLog" dump="true">
									<Call library="gecol.core,moodle,api" function="personRebuild">
										<Param name="id_school_year"><Var name="schoolYear" key="id"/></Param>
										<Param name="id_person"><Var name="object" key="id"/></Param>
									</Call>
								</Var>
								<Var name="logEntry" key="result">OK</Var>
							</Instructions>
							<Catch>
								<Var name="logEntry" key="result">ERROR</Var>
							</Catch>
						</Try>
						<Var name="log" key=""><Var name="logEntry"/></Var>
						<!-- Adds rebuild Moodle entry to action's log -->
						<ForEach var="outLog" item="outLogEntry">
							<Var name="logEntry" key="action"><Var name="outLogEntry" key="action"/></Var>						            
							<Var name="logEntry" key="result"><Var name="outLogEntry" key="result"/></Var>
							<Var name="log" key=""><Var name="logEntry"/></Var>
						</ForEach>
					</Then>
				</If>

				<!-- ______________		GOOGLE   ______________ -->
				<Var name="inGoogle" dump="true">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>google</Param>
					</SetLib>
				</Var>
				<Trace><String.parse>Updating Google ($inGoogle) user $object->uid</String.parse></Trace>
				<If condition="$inGoogle == 1 || $all == 1">
					<Then>
						<!-- Gets person's current Google record -->
						<Var name="googleUser">
							<DataAccess method="load" datasource="googleAPIAdminSDK">
								<Param name="_entity">user</Param>
								<Param name="_attributes">id,email,given_name,surname,suspended</Param>											
								<Param name="uid"><Var name="object" key="uid"/></Param>
							</DataAccess>
						</Var>
						<!-- Updates Google user -->
						<Var name="statusGoogle" dump="true">
							<DataAccess method="update" datasource="googleAPIAdminSDK">
								<Param name="_entity">user</Param>
								<Param name="uid"><Var name="object" key="uid"/></Param>								
								<Param name="given_name"><Var name="object" key="given_name"/></Param>
								<Param name="surname"><Var name="object" key="surname"/></Param>
							</DataAccess>
						</Var>
						<!-- Gets updated Google record -->
						<Var name="updatedGoogleUser">
							<DataAccess method="load" datasource="googleAPIAdminSDK">
								<Param name="_entity">user</Param>
								<Param name="_attributes">id,email,given_name,surname,suspended</Param>											
								<Param name="uid"><Var name="object" key="uid"/></Param>
							</DataAccess>
						</Var>
						<Var name="records"><Set/></Var>
						<Var name="records" key=""><Var name="googleUser"/></Var>
						<Var name="records" key=""><Var name="updatedGoogleUser"/></Var>
						<!-- Logs this action -->
						<Call library="framework,log,api" function="add">
							<Param name="type">framework,em.execution,api</Param>
							<Param name="action">update_datasource</Param>
							<Param name="log_key"><Var name="object" key="id"/></Param>
							<Param name="context_data">
								<UtilsLib method="jsonEncode">
									<Param><Var name="records"/></Param>
								</UtilsLib>
							</Param>
							<Param name="message">
								<Lang key="logDataSourceUpdate">
									<Param><Var name="object" key="id"/></Param>
									<Param>google</Param>
								</Lang>
							</Param>
						</Call>
						<!-- Adds the Google entry to action's log -->
						<Var name="logEntry" key="action"><String.parse>Updating person in Google  ::  Status: $statusGoogle</String.parse></Var>						            
						<Var name="logEntry" key="result">
							<If condition="$statusGoogle !== 0 ">
								<Then>OK</Then>
								<Else>ERROR</Else>
							</If>
						</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
					</Then>
				</If>

				<!-- ______________		MICROSOFT   ______________ -->
				<Var name="inMicrosoft" dump="true">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>microsoft</Param>
					</SetLib>
				</Var>
				<Trace><String.parse>Updating Microsoft ($inMicrosoft) user $object->uid</String.parse></Trace>
				<If condition="$inMicrosoft == 1 || $all == 1">
					<Then>
						<!-- Gets person's current Microsoft record -->
						<Var name="microsoftUser">
							<DataAccess method="load" datasource="microsoftAPIAdminSDK">
								<Param name="_entity">user</Param>
								<Param name="uid"><Var name="object" key="uid"/></Param>
							</DataAccess>
						</Var>
						<!-- Updates Microsoft user -->
            <Var name="statusMicrosoft" dump="true">
							<DataAccess method="update" datasource="microsoftAPIAdminSDK">
								<Param name="_entity">user</Param>
								<Param name="uid"><Var name="object" key="uid"/></Param>								
								<Param name="given_name"><Var name="object" key="given_name"/></Param>
								<Param name="surname"><Var name="object" key="surname"/></Param>
							</DataAccess>
						</Var>
						<!-- Gets updated Microsoft record -->
						<Var name="updatedMicrosoftUser">
							<DataAccess method="load" datasource="microsoftAPIAdminSDK">
								<Param name="_entity">user</Param>
								<Param name="uid"><Var name="object" key="uid"/></Param>
							</DataAccess>
						</Var>
						<Var name="records"><Set/></Var>
						<Var name="records" key=""><Var name="microsoftUser"/></Var>
						<Var name="records" key=""><Var name="updatedMicrosoftUser"/></Var>
						<!-- Logs this action -->
						<Call library="framework,log,api" function="add">
							<Param name="type">framework,em.execution,api</Param>
							<Param name="action">update_datasource</Param>
							<Param name="log_key"><Var name="object" key="id"/></Param>
							<Param name="context_data">
								<UtilsLib method="jsonEncode">
									<Param><Var name="records"/></Param>
								</UtilsLib>
							</Param>
							<Param name="message">
								<Lang key="logDataSourceUpdate">
									<Param><Var name="object" key="id"/></Param>
									<Param>microsoft</Param>
								</Lang>
							</Param>
						</Call>
						<!-- Adds the Microsoft entry to action's log -->
						<Var name="logEntry" key="action"><String.parse>Updating person in Microsoft  ::  Status: $statusMicrosoft</String.parse></Var>						            
						<Var name="logEntry" key="result">
							<If condition="$statusMicrosoft == 0 ">
								<Then>OK</Then>
								<Else>ERROR</Else>
							</If>
						</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
					</Then>
				</If>	

				<!-- ______________		ACCESS CONTROL   ______________ -->
				<Var name="inAccessControl" dump="true">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>accessControl</Param>
					</SetLib>
				</Var>
				<Trace><String.parse>Updating in Access Control ($inAccessControl) user $object->uid</String.parse></Trace>
				<If condition="$inAccessControl == 1 || $all == 1">
					<Then>
						<!-- Update person in accessControl -->

						<Var name="logEntry" key="action"><String.parse>Updating person in Access Control</String.parse></Var>						            
						<Var name="logEntry" key="result">
							<If condition="$acResult !== 0 ">
								<Then>OK</Then>
								<Else>ERROR</Else>
							</If>
						</Var>
						<Var name="log" key=""><Var name="logEntry"/></Var>
					</Then>
				</If>

				<!-- ______________		PRIMAVERA   ______________ -->
				<Var name="inPrimavera" dump="true">
					<SetLib method="ValueIn">
					  <Param><Var name="tasks"/></Param>
					  <Param>primavera</Param>
					</SetLib>
				</Var>
				<!-- Updates in Primavera (STD, CLB, GRD, RSCM, CJG, CLB.AEC) -->
				<Trace><String.parse>Updating Primavera ($inPrimavera) user $object->uid</String.parse></Trace>
				<If condition="$inPrimavera == 1 || $all == 1">
					<Then>
						<Try>
							<Instructions>
								<!-- Gets person's current Primavera record -->
								<Var name="personService">
									<Call library="gecol.core,person,api" function="getService">
										<Param name="id"><Var name="object" key="id"/></Param>
									</Call>
								</Var>
								<Var name="primaveraUser">
									<Call library="gecol.core,primavera,api" function="getClient">
										<Param name="id_client"><Var name="personService" key="id_client"/></Param>
										<Param name="_datasource">PRIServices</Param>
									</Call>
								</Var>
								<!-- Updates Primavera user -->
								<Var name="PRIuser">
									<Call library="gecol.core,primavera,api" function="saveClientByPerson">
										<Param name="id_person"><Var name="object" key="id"/></Param>
										<Param name="_datasource">PRIServices</Param>
									</Call>
								</Var>
								<!-- Gets updated Primavera record -->
								<Var name="updatedPrimaveraUser">
									<Call library="gecol.core,primavera,api" function="getClient">
										<Param name="id_client"><Var name="personService" key="id_client"/></Param>
										<Param name="_datasource">PRIServices</Param>
									</Call>
								</Var>
								<Var name="records"><Set/></Var>
								<Var name="records" key=""><Var name="primaveraUser"/></Var>
								<Var name="records" key=""><Var name="updatedPrimaveraUser"/></Var>
								<!-- Logs this action -->
								<Call library="framework,log,api" function="add">
									<Param name="type">framework,em.execution,api</Param>
									<Param name="action">update_datasource</Param>
									<Param name="log_key"><Var name="object" key="id"/></Param>
									<Param name="context_data">
										<UtilsLib method="jsonEncode">
											<Param><Var name="records"/></Param>
										</UtilsLib>
									</Param>
									<Param name="message">
										<Lang key="logDataSourceUpdate">
											<Param><Var name="object" key="id"/></Param>
											<Param>primavera</Param>
										</Lang>
									</Param>
								</Call>
								<!-- Adds the Primavera entry to action's log -->
								<Var name="logEntry" key="action"><String.parse>Updating person in Primavera  ::  Status: $PRIuser->reference $PRIuser->error</String.parse></Var>						            
								<Var name="logEntry" key="result">
									<If condition="$PRIuser->success == 1">
										<Then>OK</Then>
										<Else>ERROR</Else>
									</If>
								</Var>
								<Var name="log" key=""><Var name="logEntry"/></Var>								
							</Instructions>
							<Catch>
								<Var name="EXCEPTION" dump="true"/>
								<Var name="logEntry" key="action"><String.parse>Updating person in Primavera  ::  Status: $EXCEPTION->message</String.parse></Var>						            
								<Var name="logEntry" key="result">ERROR</Var>
								<Var name="log" key=""><Var name="logEntry"/></Var>								
							</Catch>
						</Try>
					</Then>
				</If>
				<Var name="log" dump="true"/>
				
				<Return>
					<Var name="log"/>
				</Return>
			</Begin>
		</Function>


		<!--
			*		personProxy  |  Executes an entity management action.
			*  
			*		PARAMS
			*    - (int) id_person  ::  Person's id;
			*    - (string) task    ::  Task to perform 'person.new.STD' 'person.new.GRD'.
			*
			*		RETURN
			*		 - (multiple) log  ::  Returns action's propagation log.
		-->
		<Function name="personProxy" scope="public" doc="Executes an entity management action">
			<Params>
			 <Param name="id_person" type="int" required="true" doc="Person's id"/>
			 <Param name="task" type="string" required="true" doc="Task to perform 'person.new.STD' 'person.new.GRD'"/>
			</Params>
			<Return type="multiple" doc="Action's propagation log"/>

			<Begin>
				<!-- Gets person -->
				<Var name="person">
					<Call library="gecol.core,person,api" function="get">
						<Param name="id"><Var name="PARAMS" key="id_person"/></Param>
					</Call>
				</Var>
				<!-- Includes the guardians in person's data -->
				<Var name="person" key="guardians">
					<Call library="gecol.core,student,api" function="listGuardians">
						<Param name="idStudent"><Var name="person" key="id"/></Param>
					</Call>
				</Var>
				<!-- Executes the action and gets the corresponding log -->
				<Var name="log">
					<Call library="framework,em.execution,api" function="execute">
						<Param name="objectCode">person</Param>
						<Param name="actionCode">get</Param>
						<Param name="object"><Var name="person"/></Param>
						<Param name="task"><Var name="PARAMS" key="task"/></Param>
					</Call>
				</Var>

				<Return>
					<Var name="log"/>
				</Return>
			</Begin>
		</Function>


		<!--
			*		updateCache  |  Updates the system entity cache.
			*  
			*		PARAMS
			*    - (int) id_person  			::  Person's id;
			*    - (text) personTypeCode  ::  Person type's code.
			*
			*		RETURN
			*		 - (multiple) log  ::  Returns action's propagation log.
		-->
		<Function name="updateCache" scope="public" doc="Updates the system entity cache.">
			<Params>
			 <Param name="id_person" type="int" required="true" doc="Person's id"/>
			 <Param name="personTypeCode" type="text" required="true" doc="Person type's code"/>
			</Params>
			<Return type="multiple" doc="Systems' status"/>

			<Begin>
				<!-- Gets person -->
				<Var name="person">
					<Call library="gecol.core,person,api" function="get">
						<Param name="id"><Var name="PARAMS" key="id_person"/></Param>
					</Call>
				</Var>

				<!-- Updates the cache -->
				<Var name="log">
					<Call library="framework,em.execution,api" function="execute">
						<Param name="objectCode">person</Param>
						<Param name="actionCode">get</Param>
						<Param name="object"><Var name="person"/></Param>
						<Param name="task"><String.parse>person.new.$personTypeCode</String.parse></Param>
					</Call>
				</Var>

				<Return>
					<Var name="log"/>
				</Return>
			</Begin>
		</Function>


		<!--
			*		updateSystem  |  Updates a system in entity management.
			*  
			*		PARAMS
			*		 - (text) datasource	 ::  System's datasource;
			*		 - (text) code				 ::  System's code;
			*		 - (text) name				 ::  System's name;
			*		 - (text) description  ::  System's description;
			*		 - (text) uuid 				 ::  System's uuid;
			*		 - (int) is_active		 ::  1 if this system is active; 0, otherwise;
			*		 - (int) id_company    ::  Company's id where this system applies.
			*
			*		RETURN
			*		 - (int) id_system_entity  ::  Returns the created 'fw_system_entity' record id.
			*
			*		ERRORS
			*	   - (code) -1  ::  Returns -1 if the system doesn't exist.
		-->
		<Function name="updateSystem" scope="private" doc="Updates a system in entity management.">
			<Params>
				<Param name="id" type="int" required="false" doc="System's id"/>
				<Param name="datasource" type="text" required="false" doc="System's datasource"/>
				<Param name="code" type="text" required="false" doc="System's code"/>
				<Param name="name" type="text" required="false" doc="System's name"/>
				<Param name="description" type="text" required="false" doc="System's description"/>
				<Param name="uuid" type="text" required="false" doc="System's uuid"/>
				<Param name="is_active" type="int" required="false" doc="1 if this system is active; 0, otherwise"/>
				<Param name="id_company" type="int" required="false" doc="Company's id where this system applies"/>
			</Params>
			<Return type="int" doc="The updated 'fw_system_entity' record id."/>
			<Errors>
				<Error code="-1" doc="System doesn't exist."/>
			</Errors>

			<Begin>
				<Var name="result">0</Var>

				<!-- Checks if the system already exists -->
				<If condition="$PARAMS->id != ''">
					<Then>
						<Var name="system">
							<Call function="getSystemById">
								<Param name="id"><Var name="PARAMS" key="id"/></Param>
							</Call>
						</Var>
					</Then>
					<Else>
						<Var name="system">
							<Call function="getSystemByCode">
								<Param name="code"><Var name="PARAMS" key="code"/></Param>
							</Call>
						</Var>
					</Else>
				</If>
				<!-- If it doesn't, sets return value to -1. Otherwise, proceeds to update -->
				<If condition="$system == ''">
					<Then>
						<Var name="result">-1</Var>
					</Then>
					<Else>
						<!-- Updates the record -->
						<DataAccess method="update" params="PARAMS">
							<Param name="_entity">fw_system_entity</Param>
							<Param name="_id_updater"><Var name="USER" key="id"/></Param>
							<Param name="_modification"><Now/></Param>
							<Param name="_modification_ip"><Var name="USER" key="ip"/></Param>
							<Param name="_id_creator"><Var name="USER" key="id"/></Param>
							<Param name="_creation"><Now/></Param>
							<Param name="_creation_ip"><Var name="USER" key="ip"/></Param>
						</DataAccess>
						<!-- Gets the record just updated -->
						<Var name="updatedSystem">
							<Call function="getSystemById">
								<Param name="id"><Var name="system" key="id"/></Param>
							</Call>
						</Var>
						<Var name="records"><Set/></Var>
						<Var name="records" key=""><Var name="system"/></Var>
						<Var name="records" key=""><Var name="updatedSystem"/></Var>
						<!-- Logs this action -->
						<Call library="framework,log,api" function="add">
							<Param name="type">framework,em.execution,api</Param>
							<Param name="action">update</Param>
							<Param name="log_key"><Var name="system" key="id"/></Param>
							<Param name="context_data">
								<UtilsLib method="jsonEncode">
									<Param><Var name="records"/></Param>
								</UtilsLib>
							</Param>
							<Param name="message">
								<Lang key="logExternalSystemUpdate">
									<Param><Var name="system" key="id"/></Param>
								</Lang>
							</Param>
						</Call>

						<!-- Sets return value to system's id -->
						<Var name="result"><Var name="updatedSystem" key="id"/></Var>
					</Else>
				</If>

				<Return>
					<Var name="result"/>
				</Return>
			</Begin>
		</Function>
	</Library>
</Node>
