<?xml version="1.0" encoding="UTF-8"?>
<Node>
    <Permissions>
    </Permissions>
    <Doc lang="pt-PT">
    </Doc>
    <Libraries>
        <Use name="DateTimeLib" type="lib" />
        <Use name="UtilsLib" type="lib" />
        <Use name="FormatterLib" type="lib" />
        <Use name="FileLib" type="lib" />
        <Use name="StringLib" type="lib" />
        <Use name="MetadataLib" type="lib" />
    </Libraries>
    <Configuration />
    <Screens>
    </Screens>
    <Actions>
    </Actions>
    <Library forceinterface="true">
        <Function name="add" doc="Updates a record in table ">
            <Params>
                <Param name="id_file" type="int" required="false" />
                <Param name="id_company" type="int" required="true" />
                <Param name="id_classification_item" required="true" />
                <Param name="id_component_type" type="int" required="true" />
                <Param name="objectData" type="object" required="false"
                    doc="Object data to fill the metadata" />
                <Param name="aggregations" type="array" />
            </Params>
            <Begin>
                <!-- Save Aggregations -->
                <Var name="aggregations">
                    <Var name="PARAMS" key="aggregations" />
                </Var>

                <!-- get the current evaluation moment so it can create an aggregation for it -->
                <Var name="aggregationEM">
                    <Call library="gecol.core,evaluation,api" function="getDefaultEvaluationMoment" />
                </Var>
                <Var name="aggregationEM" key="code">evaluationMoment</Var>

                <Var name="aggregations" key="">
                    <Var name="aggregationEM" />
                </Var>

                <Var name="id_record"></Var>
                <Var name="classificationItems" key=""><Var name="id_classification_item" /></Var>

                <If condition="$id_classification_item == 1">
                    <Then>
                        <Var name="agg"></Var>
                        <ForEach var="aggregations" item="aggregation">
                            <If condition="$aggregation->code != 'student'">
                                <Then>
                                    <Var name="agg" key=""><Var name="aggregation" /></Var>
                                </Then>
                            </If>
                        </ForEach>
                        <Var name="agg" dump="true"/>
                        <Var name="aggregations" dump="true"/>
                        <!-- get record by aggregations guid -->
                        <Var name="id_record">
                            <Call library="framework,record.aggregation,api" function="getRecordsByAggregations">
                                <Param name="aggregations">
                                    <Var name="agg" />
                                </Param>
                                <Param name="classificationItems"><Var name="classificationItems" /></Param>
                                <Param name="amountOfRelations"><Var name="aggLength" value="$agg->__length"/></Param>
                                <Param name="comparison">=</Param>
                            </Call>
                        </Var>
                    </Then>
                    <Else>
                        <!-- get record by aggregations guid -->
                        <Var name="id_record">
                            <Call library="framework,record.aggregation,api" function="getRecordsByAggregations">
                                <Param name="aggregations">
                                    <Var name="aggregations" />
                                </Param>
                                <Param name="classificationItems"><Var name="classificationItems" /></Param>
                                <Param name="amountOfRelations"><Var name="aggLength" value="$aggregations->__length"/></Param>
                                <Param name="comparison">=</Param>
                            </Call>
                        </Var>
                    </Else>
                </If>
                <Var name="id_record" dump="true"/>

                <!-- Copy object data -->
                <Var name="objectData">
                    <Var name="PARAMS" key="objectData" />
                </Var>

                <!-- Create a guid -->
                <Var name="recordGuid" >
                    <UtilsLib method="GuidClean" />
                </Var>

                <If condition="$id_record->__length == 0">
                    <Then>
                        <Var name="createdFlag">0</Var>
                    </Then>
                    <Else>
                        <Var name="createdFlag">1</Var>
                    </Else>
                </If>

                <Var name="objectData" key="record_guid">
                    <Var name="recordGuid" />
                </Var>

                <!-- Format the record date -->
                <Var name="now">
                    <DateTimeLib method="now" />
                </Var>

                <Var name="recordDate" >
                    <FormatterLib method="format">
                        <Param>DateTime</Param>
                        <Param>iso8601_datetime_reduced5</Param>
                        <Param>
                            <Var name="now" />
                        </Param>
                    </FormatterLib>
                </Var>

                <Var name="objectData" key="record_date">
                    <Var name="recordDate" />
                </Var>

                <!-- Classification item -->
                <Var name="classificationItem" >
                    <Call library="framework,classification.item,api" function="get">
                        <Param name="id">
                            <Var name="PARAMS" key="id_classification_item" />
                        </Param>
                    </Call>
                </Var>

                <!-- Access level classification -->
                <Var name="objectData" key="accessLevelClassification">
                    <Call library="framework,access.level.classification,api" function="get">
                        <Param name="id">
                            <Var name="classificationItem" key="id_access_level_classification" />
                        </Param>
                    </Call>
                </Var>

                <Var name="objectData" key="classificationItem">
                    <Var name="classificationItem" />
                </Var>

                <!-- Load metadata definition -->

                <Var name="metadataDefinition">
                    <Var name="classificationItem" key="metadata_definition" />
                </Var>

                <!-- Expand metadata with ObjectData -->
                <Var name="expandedMetadata" >
                    <MetadataLib method="expand">
                        <Param name="matchMetadata">
                            <Var name="metadataDefinition" />
                        </Param>
                        <Param name="objectData">
                            <Var name="objectData" />
                        </Param>
                    </MetadataLib>
                    <!-- <Call library="framework,classification.item,api" function="getComponentMetadata">
                        <Param name="matchMetadata"> </Param> <Param name="objectData"> </Param> </Call> -->
                </Var>

                <!-- if a record exists, then just update, otherwise, create a new one -->
                <If condition="$createdFlag == 0">
                    <Then>

                        <!-- Insert the record into database -->
                        <Var name="id_record">
                            <DataAccess method="framework,generic,insert">
                                <Param name="table">fw_record</Param>
                                <Param name="guid">
                                    <Var name="recordGuid" />
                                </Param>
                                <Param name="id_company">
                                    <Var name="USER" key="idCompany" />
                                </Param>
                                <Param name="id_file">
                                    <Var name="PARAMS" key="id_file" />
                                </Param>
                                <Param name="id_component_type">
                                    <Var name="PARAMS" key="id_component_type" />
                                </Param>
                                <Param name="metadata">
                                    <Var name="expandedMetadata" />
                                </Param>
                                <Param name="_creation">
                                    <DateTimeLib method="Now" />
                                </Param>
                                <Param name="_creation_ip">
                                    <Var name="USER" key="ip" />
                                </Param>
                                <Param name="_modification">
                                    <DateTimeLib method="Now" />
                                </Param>
                                <Param name="_modification_ip">
                                    <Var name="USER" key="ip" />
                                </Param>
                            </DataAccess>
                        </Var>

                        <!-- duplicate record for records management testing purposes -->
                        <!-- TEST::RM -->
                        <!--Var name="rm_settings" key="id_file"><Var name="PARAMS" key="id_file"/></Var>
                        <Var name="rm_settings" key="duplicate"><Int>1</Int></Var>
                        <Var name="rm_component" key="settings"><Var name="rm_settings"/></Var>
                        <Var name="rm_plugin">
                          <DataAccess method="load">
                            <Param name="_entity">fw_rm_component_plugin</Param>
                            <Param name="code"><String>localfile</String></Param>
                          </DataAccess>
                        </Var>
                        <Var name="rm_component" key="id_plugin"><Var name="rm_plugin" key="id"/></Var>
                        <Var name="rm_componentArray" key=""><Var name="rm_component"/></Var>
                        <If condition="$classificationItem->code == 'FI'">
                          <Then><Var name="rm_class_code"><String>080.020</String></Var></Then>
                          <Else>
                            <If condition="$classificationItem->code == 'PF'">
                              <Then><Var name="rm_class_code"><String>080.017</String></Var></Then>
                            </If>
                          </Else>
                        </If>
                        <Var name="rm_id_record">
                          <Call library="framework,rm.record,api" function="add">
                            <Param name="class_code"><Var name="rm_class_code"/></Param>
                            <Param name="is_final">0</Param>
                            <Param name="data"><Var name="objectData"/></Param>
                            <Param name="componentArray"><Var name="rm_componentArray"/></Param>
                          </Call>
                        </Var-->
                        <!-- TEST::RM -->

                    </Then>
                </If>


                <Var name="path">
                    <StringLib method="concatenate">
                        <Param>records/</Param>
                        <Param>
                            <Var name="recordGuid" />
                        </Param>
                        <Param>/</Param>
                    </StringLib>
                </Var>

                <Var name="fileId" >
                    <FileLib method="copyFile">
                        <Param name="id">
                            <Var name="PARAMS" key="id_file" />
                        </Param>
                        <Param name="path">
                            <Var name="path" />
                        </Param>
                    </FileLib>
                </Var>

                <Var name="file">
                    <DataAccess method="framework,generic,load">
                        <Param name="table">fw_file</Param>
                        <Param name="id">
                            <Var name="fileId" />
                        </Param>
                    </DataAccess>
                </Var>

                <Var name="checksum" >
                    <FileLib method="getFileChecksum">
                        <Param name="id">
                            <Var name="fileId" />
                        </Param>
                    </FileLib>
                </Var>

                <Var name="checksumFile" dump="true">
                    <FileLib method="createFile">
                        <Param name="filename">
                            <Var name="file" key="name" />
                        </Param>
                        <Param name="ext">checksum.md5</Param>
                        <Param name="content">
                            <Var name="checksum" />
                        </Param>
                        <Param name="path">
                            <Var name="path" />
                        </Param>
                    </FileLib>
                </Var>

                <Var name="metadataFile">
                    <FileLib method="createFile">
                        <Param name="filename">
                            <Var name="file" key="name" />
                        </Param>
                        <Param name="ext">metadata.xml</Param>
                        <Param name="content">
                            <Var name="expandedMetadata" />
                        </Param>
                        <Param name="path">
                            <Var name="path" />
                        </Param>
                    </FileLib>
                </Var>

                <Var name="metadataFileData">
                    <DataAccess method="framework,generic,load">
                        <Param name="table">fw_file</Param>
                        <Param name="id">
                            <Var name="metadataFile" />
                        </Param>
                    </DataAccess>
                </Var>

                <Var name="checksumFile" >
                    <FileLib method="createFile">
                        <Param name="filename">
                            <Var name="metadataFileData" key="name" />
                        </Param>
                        <Param name="ext">checksum.md5</Param>
                        <Param name="content">
                            <FileLib method="getFileChecksum">
                                <Param name="id">
                                    <Var name="metadataFile" />
                                </Param>
                            </FileLib>
                        </Param>
                        <Param name="path">
                            <Var name="path" />
                        </Param>
                    </FileLib>
                </Var>

                <If condition="$createdFlag == 0">
                    <Then>
                        <ForEach var="aggregations" item="aggregation">
                            <Var name="aggregation_type">
                                <Call library="framework,record.aggregation.type,api" function="getByCode">
                                    <Param name="code">
                                        <Var name="aggregation" key="code" />
                                    </Param>
                                </Call>
                            </Var>

                            <!-- if it's a final evaluation document, then it verifies if the student's aggregation exists -->
                            <Var name="hasAgg"></Var>
                            <Var name="fEAgg"><Var name="agg" /></Var>
                            <If condition="$id_classification_item == 1">
                                <Then>
                                    <If condition="$aggregation->code == 'student'">
                                        <Then>
                                            <Var name="fEAgg" key=""><Var name="aggregation" /></Var>
                                            <Var name="hasAgg">
                                                <Call library="framework,record.aggregation,api" function="getRecordsByAggregations">
                                                    <Param name="aggregations">
                                                        <Var name="fEAgg" />
                                                    </Param>
                                                    <Param name="classificationItems"><Var name="classificationItems" /></Param>
                                                    <Param name="amountOfRelations"><Var name="test" value="$fEAgg->__length"/></Param>
                                                    <Param name="comparison">=</Param>
                                                </Call>
                                            </Var>
                                        </Then>
                                    </If>
                                </Then>
                            </If>

                            <If condition="$hasAgg->__length == 0">
                                <Then>
                                    <Call library="framework,record.aggregation,api" function="add">
                                        <Param name="id_record">
                                            <Var name="id_record" />
                                        </Param>
                                        <Param name="id_aggregation_type">
                                            <Var name="aggregation_type" key="id" />
                                        </Param>
                                        <Param name="guid">
                                            <Var name="aggregation" key="guid" />
                                        </Param>
                                    </Call>

                                    <!-- duplicate aggregations for records management testing purposes -->
                                    <!-- TEST::RM -->
                                    <!--Var name="rm_data" key="uuid"><Var name="aggregation" key="guid"/></Var>
                                    <Var name="rm_class">
                                      <DataAccess method="load">
                                        <Param name="_entity">fw_rm_class</Param>
                                        <Param name="code"><Var name="rm_class_code"/></Param>
                                      </DataAccess>
                                    </Var>
                                    <Var name="rm_data" key="id_class"><Var name="rm_class" key="id"/></Var>
                                    <Var name="rm_data" key="name"><Var name="aggregation_type" key="code" /></Var>
                                    <Var name="rm_data" key="description"><Var name="rm_class_code"/></Var>
                                    <Var name="rm_id_aggregation">
                                      <Call library="framework,rm.aggregation,api" function="add">
                                        <Param name="uuid_parent"></Param>
                                        <Param name="data"><Var name="rm_data"/></Param>
                                      </Call>
                                    </Var>
                                    <Var name="rm_aggregation">
                                      <DataAccess method="load">
                                        <Param name="_entity">fw_rm_aggregation</Param>
                                        <Param name="id"><Var name="rm_id_aggregation"/></Param>
                                      </DataAccess>
                                    </Var>
                                    <Call library="framework,rm.aggregation,api" function="addRecord">
                                      <Param name="uuid_aggregation"><Var name="rm_aggregation" key="uuid"/></Param>
                                      <Param name="id_record"><Var name="rm_id_record"/></Param>
                                    </Call-->
                                    <!-- TEST::RM -->

                                </Then>
                            </If>
                        </ForEach>
                    </Then>
                </If>

                <DataAccess method="framework,generic,update">
                    <Param name="table">fw_record</Param>
                    <Param name="id">
                        <Var name="id_record" />
                    </Param>
                    <Param name="id_classification_item">
                        <Var name="PARAMS" key="id_classification_item" />
                    </Param>
                    <Param name="metadata">
                        <Var name="expandedMetadata" />
                    </Param>
                </DataAccess>

                <Return>
                    <Call function="get">
                        <Param name="id">
                            <Var name="id_record" />
                        </Param>
                    </Call>
                </Return>
            </Begin>
        </Function>


        <!--Function name="addRecordAggregation" scope="protected" doc="Add aggregation info to this record">
            <Params>
                <Param name="record_guid" />
                <Param name="id_classification_item" />
                <Param name="aggregations" />
            </Params>
            <Return type="single" />
            <Begin>
                <Var name="record">
                    <Call library="framework,record,api" function="getByGuid">
                        <Param name="guid">
                            <Var name="PARAMS" key="record_guid" />
                        </Param>
                    </Call>
                </Var>

                << handle aggregations >>
                <Var name="aggregations">
                    <Var name="PARAMS" key="aggregations" />
                </Var>

                << get the current evaluation moment so it can create an aggregation for it >>
                <Var name="aggregationEM">
                    <Call library="gecol.core,evaluation,api" function="getDefaultEvaluationMoment" />
                </Var>
                <Var name="aggregationEM" key="code">evaluationMoment</Var>
                <Var name="aggregationEM" key="guid">
                    <Var name="aggregationEM" key="guid" />
                </Var>

                <Var name="aggregations" key="">
                    <Var name="aggregationEM" />
                </Var>

                <ForEach var="aggregations" item="aggregation">
                    <Var name="aggregation_type">
                        <Call library="framework,record.aggregation.type,api" function="getByCode">
                            <Param name="code">
                                <Var name="aggregation" key="code" />
                            </Param>
                        </Call>
                    </Var>
                    <Call library="framework,record.aggregation,api" function="add">
                        <Param name="id_record">
                            <Var name="record" key="id" />
                        </Param>
                        <Param name="id_aggregation_type">
                            <Var name="aggregation_type" key="id" />
                        </Param>
                        <Param name="guid">
                            <Var name="aggregation" key="guid" />
                        </Param>
                    </Call>
                </ForEach>

                << update record >>
                <Call library="framework,record,api" function="update">
                    <Param name="id">
                        <Var name="record" key="id" />
                    </Param>
                    <Param name="id_classification_item">
                        <Var name="PARAMS" key="id_classification_item" />
                    </Param>
                </Call>


            </Begin>
        </Function-->

        <Function name="delete" doc="Delete a record by id from table fw_record">
            <Params>
                <Param name="id" type="int" />
                <Param name="guid" type="int" />
            </Params>
            <Return type="int" doc="" />
            <Begin>
                <Var name="guid">
                    <Var name="PARAMS" key="guid" />
                </Var>
                <If condition="$PARAMS->id != ''">
                    <Then>
                        <Var name="record">
                            <Call function="get">
                                <Param name="id">
                                    <Var name="PARAMS" key="id" />
                                </Param>
                            </Call>
                        </Var>
                        <Var name="guid">
                            <Var name="record" key="guid" />
                        </Var>
                    </Then>
                </If>
                <If condition="$guid!=''">
                    <Then>
                        <!-- delete record and aggregations -->
                        <Execute method="this,this,deleteRecordAggregations">
                            <Param name="guid">
                                <Var name="guid" />
                            </Param>
                        </Execute>
                    </Then>
                </If>



                <Return>1</Return>
            </Begin>
        </Function>
        <Function name="update" doc="Updates a record in table fw_record">
            <Params>
                <Param name="id" type="int" required="true" />
                <Param name="guid" type="text" required="false" />
                <Param name="id_company" type="int" required="false" />
                <Param name="id_file" type="int" required="false" />
                <Param name="id_component_type" type="int" required="false" />
                <Param name="id_classification_item" type="int" required="false" />
                <Param name="metadata" type="text" required="false" />
                <Param name="name" type="text" required="false" />
                <Param name="short_name" type="text" required="false" />
                <Param name="code" type="text" required="false" />
                <Param name="order" type="int" required="false" />
            </Params>
            <Begin>
                <Var name="PARAMS"  />

                <Var name="paramData">
                    <UtilsLib method="filterNotNull">
                        <Param>
                            <Var name="PARAMS" />
                        </Param>
                    </UtilsLib>
                </Var>

                <Execute method="framework,generic,update" params="paramData">
                    <Param name="table">fw_record</Param>
                    <Param name="_modification">
                        <DateTimeLib method="Now" />
                    </Param>
                    <Param name="_modification_ip">
                        <Var name="USER" key="ip" />
                    </Param>
                </Execute>
            </Begin>
        </Function>
        <Function name="search" doc="Search records from table fw_record">
            <Params>
                <Param name="id" type="int" />
                <Param name="guid" type="text" />
                <Param name="id_company" type="int" />
                <Param name="id_file" type="int" />
                <Param name="id_component_type" type="int" />
                <Param name="metadata" type="text" />
                <Param name="name" type="text" />
                <Param name="short_name" type="text" />
                <Param name="code" type="text" />
                <Param name="order" type="int" />
                <Param name="_creation" type="int" />
                <Param name="_creation_ip" type="text" />
                <Param name="_modification" type="int" />
                <Param name="_modification_ip" type="text" />
                <Param name="pagenum" type="int" />
                <Param name="pagesize" type="int" />
            </Params>
            <Return type="multiple" doc="">
                <External name="id" type="int" doc="" />
                <External name="guid" type="text" doc="" />
                <External name="id_company" type="int" doc="" />
                <External name="id_file" type="int" doc="" />
                <External name="id_component_type" type="int" doc="" />
                <External name="metadata" type="text" doc="" />
                <External name="name" type="text" doc="" />
                <External name="short_name" type="text" doc="" />
                <External name="code" type="text" doc="" />
                <External name="order" type="int" doc="" />
                <External name="_creation" type="int" doc="" />
                <External name="_creation_ip" type="text" doc="" />
                <External name="_modification" type="int" doc="" />
                <External name="_modification_ip" type="text" doc="" />
            </Return>
            <Begin>
                <Return>
                    <Execute method="this,this,search">
                        <Param name="id">
                            <Var name="PARAMS" key="id" />
                        </Param>
                        <Param name="guid" wildcard="full">
                            <Var name="PARAMS" key="guid" />
                        </Param>
                        <Param name="id_company">
                            <Var name="PARAMS" key="id_company" />
                        </Param>
                        <Param name="id_file">
                            <Var name="PARAMS" key="id_file" />
                        </Param>
                        <Param name="id_component_type">
                            <Var name="PARAMS" key="id_component_type" />
                        </Param>
                        <Param name="metadata" wildcard="full">
                            <Var name="PARAMS" key="metadata" />
                        </Param>
                        <Param name="name" wildcard="full">
                            <Var name="PARAMS" key="name" />
                        </Param>
                        <Param name="short_name" wildcard="full">
                            <Var name="PARAMS" key="short_name" />
                        </Param>
                        <Param name="code" wildcard="full">
                            <Var name="PARAMS" key="code" />
                        </Param>
                        <Param name="order">
                            <Var name="PARAMS" key="order" />
                        </Param>
                        <Param name="_creation">
                            <Var name="PARAMS" key="_creation" />
                        </Param>
                        <Param name="_creation_ip" wildcard="full">
                            <Var name="PARAMS" key="_creation_ip" />
                        </Param>
                        <Param name="_modification">
                            <Var name="PARAMS" key="_modification" />
                        </Param>
                        <Param name="_modification_ip" wildcard="full">
                            <Var name="PARAMS" key="_modification_ip" />
                        </Param>
                        <Param name="pagenum">
                            <Var name="PARAMS" key="pagenum" />
                        </Param>
                        <Param name="pagesize">
                            <Var name="PARAMS" key="pagesize" />
                        </Param>
                    </Execute>
                </Return>
            </Begin>
        </Function>
        <Function name="getAll" doc="Get all records from table fw_record">
            <Params />
            <Return type="multiple" doc="">
                <External name="id" type="int" doc="" />
                <External name="guid" type="text" doc="" />
                <External name="id_company" type="int" doc="" />
                <External name="id_file" type="int" doc="" />
                <External name="id_component_type" type="int" doc="" />
                <External name="metadata" type="text" doc="" />
                <External name="name" type="text" doc="" />
                <External name="short_name" type="text" doc="" />
                <External name="code" type="text" doc="" />
                <External name="order" type="int" doc="" />
                <External name="_creation" type="int" doc="" />
                <External name="_creation_ip" type="text" doc="" />
                <External name="_modification" type="int" doc="" />
                <External name="_modification_ip" type="text" doc="" />
            </Return>
            <Begin>
                <Return>
                    <Execute method="framework,generic,getAll">
                        <Param name="table">fw_record</Param>
                        <Param name="fields">*</Param>
                    </Execute>
                </Return>
            </Begin>
        </Function>
        <Function name="getById" doc="Get a record by id from table fw_record">
            <Params>
                <Param name="id" type="int" required="true" />
            </Params>
            <Return type="single" doc="">
                <External name="id" type="int" doc="" />
                <External name="guid" type="text" doc="" />
                <External name="id_company" type="int" doc="" />
                <External name="id_file" type="int" doc="" />
                <External name="id_component_type" type="int" doc="" />
                <External name="metadata" type="text" doc="" />
                <External name="name" type="text" doc="" />
                <External name="short_name" type="text" doc="" />
                <External name="code" type="text" doc="" />
                <External name="order" type="int" doc="" />
                <External name="_creation" type="int" doc="" />
                <External name="_creation_ip" type="text" doc="" />
                <External name="_modification" type="int" doc="" />
                <External name="_modification_ip" type="text" doc="" />
            </Return>
            <Begin>
                <Return>
                    <Execute method="framework,generic,load">
                        <Param name="table">fw_record</Param>
                        <Param name="id">
                            <Var name="PARAMS" key="id" />
                        </Param>
                    </Execute>
                </Return>
            </Begin>
        </Function>
        <Function name="get" doc="Get a record">
            <Params>
                <Param name="id" type="int" required="true" />
            </Params>
            <Return type="single" doc="">
                <External name="id" type="int" doc="" />
                <External name="guid" type="text" doc="" />
                <External name="id_company" type="int" doc="" />
                <External name="id_file" type="int" doc="" />
                <External name="id_component_type" type="int" doc="" />
                <External name="metadata" type="text" doc="" />
                <External name="name" type="text" doc="" />
                <External name="short_name" type="text" doc="" />
                <External name="code" type="text" doc="" />
                <External name="order" type="int" doc="" />
                <External name="_creation" type="int" doc="" />
                <External name="_creation_ip" type="text" doc="" />
                <External name="_modification" type="int" doc="" />
                <External name="_modification_ip" type="text" doc="" />
            </Return>
            <Begin>
                <Return>
                    <Call function="getById">
                        <Param name="id">
                            <Var name="PARAMS" key="id" />
                        </Param>
                    </Call>
                </Return>
            </Begin>
        </Function>
        <Function name="getByGuid" doc="Get a record by guid from table fw_record">
            <Params>
                <Param name="guid" type="text" required="true" />
            </Params>
            <Return type="single" doc="">
                <External name="id" type="int" doc="" />
                <External name="guid" type="text" doc="" />
                <External name="id_company" type="int" doc="" />
                <External name="id_file" type="int" doc="" />
                <External name="id_component_type" type="int" doc="" />
                <External name="metadata" type="text" doc="" />
                <External name="name" type="text" doc="" />
                <External name="short_name" type="text" doc="" />
                <External name="code" type="text" doc="" />
                <External name="order" type="int" doc="" />
                <External name="_creation" type="int" doc="" />
                <External name="_creation_ip" type="text" doc="" />
                <External name="_modification" type="int" doc="" />
                <External name="_modification_ip" type="text" doc="" />
            </Return>
            <Begin>
                <Return>
                    <Execute method="framework,generic,load">
                        <Param name="table">fw_record</Param>
                        <Param name="guid">
                            <Var name="PARAMS" key="guid" />
                        </Param>
                    </Execute>
                </Return>
            </Begin>
        </Function>


        <Function name="getByAggregationTypeCode">
            <Params>
                <Param name="aggregation_type_code" />
                <Param name="guid" />
                <Param name="id_classification_item" />
            </Params>
            <Return type="multiple" />
            <Begin>
                <Var name="aggregationType">
                    <Call library="framework,record.aggregation.type,api" function="getByCode">
                        <Param name="code">
                            <Var name="PARAMS" key="aggregation_type_code" />
                        </Param>
                    </Call>
                </Var>


                <Return>

                    <Execute method="this,this,getByAggregationCode">
                        <Param name="id_aggregation_type">
                            <Var name="aggregationType" key="id" />
                        </Param>
                        <Param name="guid">
                            <Var name="PARAMS" key="guid" />
                        </Param>
                        <Param name="id_classification_item">
                            <Var name="PARAMS" key="id_classification_item" />
                        </Param>
                    </Execute>

                </Return>
            </Begin>
        </Function>

    </Library>


</Node>
