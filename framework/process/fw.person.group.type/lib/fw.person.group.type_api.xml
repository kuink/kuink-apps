<?xml version="1.0" encoding="UTF-8"?>
<Node>
    <Permissions/>
    <Libraries>
        <Use name="DateTimeLib" type="lib"/>
        <Use name="UtilsLib" type="lib"/>
    </Libraries>
    <Configuration/>
    <Screens/>
    <Actions>
        <Action name="init"/>
    </Actions>
    <Library>
        <Function name="add" scope="public" doc="Add a new person group type">
            <Params>
                <Param name="name" doc="Person group type name"/>
                <Param name="code" doc="Person group type code"/>
            </Params>
            <Return type="single" doc="">
                <External name="id" type="text" doc=""/>
                <External name="name" type="text" doc=""/>
                <External name="code" type="text" doc=""/>
                <External name="_creation" type="text" doc=""/>
                <External name="_modification" type="text" doc=""/>
                <External name="_creation_ip" type="text" doc=""/>
                <External name="_modification_ip" type="text" doc=""/>
            </Return>
            <Begin>
                <Var name="newId" >
                    <DataAccess method="insert">
                        <Param name="_entity">fw_person_group_type</Param>
                        <Param name="name"><Var name="PARAMS" key="name"/></Param>
                        <Param name="code"><Var name="PARAMS" key="code"/></Param>
                        <Param name="is_active"><Var name="PARAMS" key="is_active"/></Param>
                        <Param name="_base">true</Param>
                    </DataAccess>
                </Var>
                <Return>
                    <DataAccess method="load">
                        <Param name="_entity">fw_person_group_type</Param>
                        <Param name="id"><Var name="newId"/></Param>
                    </DataAccess>
                </Return>
            </Begin>
        </Function>

        <Function name="get" scope="public" doc="Get a person group type">
            <Params>
                <Param name="id" required="true"/>
            </Params>
            <Return type="single" doc="">
                <External name="id" type="text" doc=""/>
                <External name="name" type="text" doc=""/>
                <External name="code" type="text" doc=""/>
                <External name="_creation" type="text" doc=""/>
                <External name="_modification" type="text" doc=""/>
                <External name="_creation_ip" type="text" doc=""/>
                <External name="_modification_ip" type="text" doc=""/>
            </Return>
            <Begin>
                <Return>
                    <DataAccess method="load">
                        <Param name="_entity">fw_person_group_type</Param>
                        <Param name="id"><Var name="PARAMS" key="id"/></Param>
                    </DataAccess>
                </Return>
            </Begin>
        </Function>

        <Function name="getIdByCode" scope="public" doc="Get the id given the code of a person group type">
            <Params>
              <Param name="code" required="true"/>
            </Params>
            <Return type="int" doc="The id"/>
            <Begin>
              <Var name="record">
               <DataAccess method="load">
                   <Param name="_entity">fw_person_group_type</Param>
                   <Param name="code"><Var name="PARAMS" key="code"/></Param>
               </DataAccess>
              </Var>
              <Return><Var name="record" key="id"/></Return>
            </Begin>
        </Function>


        <Function name="getAll" scope="public" doc="Get all person group types">
            <Params />
            <Return type="multiple" doc="">
                <External name="id" type="text" doc=""/>
                <External name="name" type="text" doc=""/>
                <External name="code" type="text" doc=""/>
                <External name="_creation" type="text" doc=""/>
                <External name="_modification" type="text" doc=""/>
                <External name="_creation_ip" type="text" doc=""/>
                <External name="_modification_ip" type="text" doc=""/>
            </Return>
            <Begin>
                <Return>
                    <DataAccess method="getAll">
                        <Param name="_entity">fw_person_group_type</Param>
                    </DataAccess>
                </Return>
            </Begin>
        </Function>

        <Function name="getAllWithUsageCount" scope="public" doc="Get all person group types with usage count in person groups">
            <Params />
            <Return type="multiple"/>
            <Begin>
                <Return>
                    <DataAccess method="this,this,getAllWithUsageCount"/>
                </Return>
            </Begin>
        </Function>

        <Function name="update" scope="public" doc="Update a person group">
            <Params>
                <Param name="id" required="true"/>
                <Param name="name"/>
                <Param name="code"/>
            </Params>
            <Return type="single" doc="">
                <External name="id" type="text" doc=""/>
                <External name="name" type="text" doc=""/>
                <External name="code" type="text" doc=""/>
                <External name="_creation" type="text" doc=""/>
                <External name="_modification" type="text" doc=""/>
                <External name="_creation_ip" type="text" doc=""/>
                <External name="_modification_ip" type="text" doc=""/>
            </Return>
            <Begin>
                <!-- Get the record -->
                <Var name="record">
                    <Call function="get">
                        <Param name="id">
                            <Var name="PARAMS" key="id"/>
                        </Param>
                    </Call>
                </Var>
                <!-- Update the record -->
                <Var name="dataParams">
                    <UtilsLib method="filterNotNull">
                        <Param><Var name="PARAMS" /></Param>
                    </UtilsLib>
                </Var>
                <DataAccess method="update" params="dataParams">
                    <Param name="_entity">fw_person_group_type</Param>
                    <Param name="id"><Var name="PARAMS" key="id"/></Param>
                    <Param name="_base">true</Param>
                </DataAccess>
                <!-- Get the updated record -->
                <Var name="updatedRecord">
                    <Call function="get">
                        <Param name="id">
                            <Var name="PARAMS" key="id"/>
                        </Param>
                    </Call>
                </Var>
                <!-- Log this action, if the record existed -->
                <If condition="$updatedRecord != '' &amp;&amp; $updatedRecord != null">
                    <Then>
                        <Var name="records"><Set/></Var>
                        <Var name="records" key=""><Var name="record"/></Var>
                        <Var name="records" key=""><Var name="updatedRecord"/></Var>
                        <Call library="framework,log,api" function="add">
                            <Param name="type">framework,fw.person.group.type,api</Param>
                            <Param name="action">update</Param>
                            <Param name="log_key"><Var name="record" key="id"/></Param>
                            <Param name="context_data">
                                <UtilsLib method="jsonEncode">
                                    <Param><Var name="records"/></Param>
                                </UtilsLib>
                            </Param>
                            <Param name="message">
                                <Lang key="logPersonGroupTypeUpdate">
                                    <Param><Var name="updatedRecord" key="id"/></Param>
                                </Lang>
                            </Param>
                        </Call>
                    </Then>
                </If>
                <Return>
                    <Var name="record"/>
                </Return>
            </Begin>
        </Function>

        <Function name="delete" scope="public" doc="Delete a person group type">
            <Params>
                <Param name="id" required="true"/>
            </Params>
            <Return type="int"/>
            <Begin>
                <!-- Get the record -->
                <Var name="record">
                    <Call function="get">
                        <Param name="id">
                            <Var name="PARAMS" key="id"/>
                        </Param>
                    </Call>
                </Var>
                <!-- Delete the record -->
                <Var name="deleted">
                    <DataAccess method="delete">
                        <Param name="_entity">fw_person_group_type</Param>
                        <Param name="id"><Var name="PARAMS" key="id"/></Param>
                    </DataAccess>
                </Var>
                <!-- Log this action, if the record existed -->
                <If condition="$record != '' &amp;&amp; $record != null">
                    <Then>
                        <Call library="framework,log,api" function="add">
                            <Param name="type">framework,fw.person.group.type,api</Param>
                            <Param name="action">delete</Param>
                            <Param name="log_key"><Var name="record" key="id"/></Param>
                            <Param name="context_data">
                                <UtilsLib method="jsonEncode">
                                    <Param><Var name="record"/></Param>
                                </UtilsLib>
                            </Param>
                            <Param name="message">
                                <Lang key="logAchievementStdTypeDelete">
                                    <Param><Var name="record" key="id"/></Param>
                                </Lang>
                            </Param>
                        </Call>
                    </Then>
                </If>
                <Return>
                    <If condition="$deleted == 1">
                        <Then>1</Then>
                        <Else>0</Else>
                    </If>
                </Return>
            </Begin>
        </Function>
    </Library>
</Node>