<?xml version="1.0" encoding="UTF-8"?>
<Node>
    <Permissions/>
    <Libraries>
      <Use name="FormatterLib" type="lib"/>
    </Libraries>
    <Configuration/>
    <Screens/>
    <Actions>
        <Action name="init"/>
    </Actions>
    <Library>

        <Function name="prepare" doc="prepare">
            <Params/>
            <Return type="text" doc="Test documentation"/>
            <Begin>
              <!--Permissions>
                <Allow>
                  <Capability name="framework/unitTest:run"/>
                </Allow>
              </Permissions-->              
              <Var name="context" key="message">Test Formatter Call with function that returns a string</Var>
              <Return>
                  <Var name="context"/>
              </Return>
            </Begin>
        </Function>        

        <Function name="run" doc="Run the test">
            <Params>
              <Param name="context" doc="Context data"/>
            </Params>
            <Return type="single" doc="The result">
              <External name="code" type="int" doc="The result code"/>
              <External name="data" type="text" doc="Data returned by the function"/>
            </Return>
            <Errors>
              <Error code="-1" doc="Test failed"/>
            </Errors>            
            <Begin>
              <!--Permissions>
                <Allow>
                  <Capability name="framework/unitTest:run"/>
                </Allow>
              </Permissions-->
							  <Var name="value">AA</Var>
							  <Var name="prefix">__</Var>
              	<Var name="expectedResult"><String.parse>$prefix$value</String.parse></Var>
							  
							  <Var name="params"><Set/></Var>
							  <Var name="params" key="library">framework,_unitTest,neon.70.formatter.call.string</Var>
							  <Var name="params" key="function">stringFormatter</Var>
							  <Var name="params" key="prefix"><Var name="prefix"/></Var>
							  
							  <Var name="test">
					        <FormatterLib method="format">
					          <Param>Call</Param>
					          <Param>format</Param>
					          <Param><Var name="value"/></Param>
					          <Param><Var name="params"/></Param>
					        </FormatterLib>
              	</Var>
              
              <If condition="$test == $expectedResult">
                <Then><Var name="code">0</Var></Then>
                <Else><Var name="code">-1</Var></Else>
              </If>
              
              <Var name="result" key="code"><Var name="code"/></Var>
              <Var name="result" key="data"><Var name="test"/></Var>
              <Return>
                  <Var name="result"/>
              </Return>
            </Begin>
        </Function>
        
        <Function name="clean" doc="Removes the data added">
            <Params>
              <Param name="context" doc="Context data"/>
            </Params>
            <Return type="int" doc=""/>
            <Begin>
            </Begin>
        </Function>
        
        <Function scope="public" name="stringFormatter" doc="Formatter function that returns a value formatted with prefix __">
					<Params>
						<Param name="value" type="string"/>
						<Param name="prefix" type="string"/>
					</Params>
					<Return type="string"/>
					<Begin>
						<Return><String.parse>$prefix$value</String.parse></Return>
					</Begin>
				</Function>
        
    </Library>
</Node>

